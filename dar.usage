	ui_printf("\n");
	ui_printf("Commands are:\n");
	ui_printf("   -c  creates an archive\n");
	ui_printf("   -x  extracts files from the archive\n");
	ui_printf("   -d  compares the archive with the existing filesystem\n");
	ui_printf("   -t  tests the archive integrity\n");
	ui_printf("   -l  lists the contents of the archive\n");
	ui_printf("   -C  isolates the catalogue from an archive\n");
	ui_printf("\n");
	ui_printf("   -h  displays this help information\n");
	ui_printf("   -V  displays version information\n");
	ui_printf("\n");
	ui_printf("Common options:\n");
	ui_printf("   -v\t\t   verbose output\n");
	ui_printf("   -R <path>\t   filesystem root directory for saving or restoring (current\n");
	ui_printf("\t\t   dir by default)\n");
	ui_printf("   -X <mask>\t   files to exclude from the operation (none by default)\n");
	ui_printf("   -I <mask>\t   files to include in the operation (all by default)\n");
	ui_printf("\t\t   -X and -I do not affect directories (see -P and the path\n");
	ui_printf("\t\t   list for that)\n");
	ui_printf("\t\t   -X, -I and -P may appear more than once on the command line\n");
	ui_printf("   -P <path>\t   subdirectory of the filesystem root (-R) to exclude from the\n");
	ui_printf("\t\t   operation\n");
	ui_printf("   -n\t\t   don't overwrite files\n");
	ui_printf("   -w\t\t   don't warn before overwriting files\n");
	ui_printf("\t\t   by default overwriting is allowed but a warning is issued\n");
	ui_printf("\t\t   first\n");
	ui_printf("   -b\t\t   ring the terminal bell when user action is required\n");
	ui_printf("   -O\t\t   do not consider user and group ownership\n");
	ui_printf("   -E <string>\t   command line to execute between slices\n");
	ui_printf("   -F <string>\t   command line to execute between the slices of the archive of\n");
	ui_printf("\t\t   reference\n");
	ui_printf("\n");
	ui_printf("   -u\t\t   do not save/restore EA of the user namespace.\n");
	ui_printf("   -U\t\t   do not save/restore EA of the root namespace (needs root\n");
	ui_printf("\t\t   privileges).\n");
	ui_printf("\t\t   -U and -u are only available if EA_SUPPORT has been set at\n");
	ui_printf("\t\t   compilation time. Check with -V to know compilation option\n");
	ui_printf("\t\t   used.\n");
	ui_printf("   -K <string>\t   use the <string> to scramble/unscramble (i.e.: hide/decode)\n");
	ui_printf("\t\t   the contents of the archive.\n");
	ui_printf("   -J <string>\t   same as -K but it does concern the archive of reference\n");
	ui_printf("\t\t   (given with -A option)\n");
	ui_printf("   -B <filename>   you can put any command line option or arguments in the\n");
	ui_printf("\t\t   given file, that will be parsed as if they were in place of\n");
	ui_printf("\t\t   the -B option.\n");
	ui_printf("\n");
	ui_printf("   [path list]\t   subdirectories of the filesystem root (-R) to consider (all\n");
	ui_printf("\t\t   by default) -- see also -P\n");
	ui_printf("\n");
	ui_printf("Saving or Isolation options (to use with -c or -C) :\n");
	ui_printf("   -A [path/]<basename> archive to take as reference (mandatory with -C)\n");
	ui_printf("   -z [level]\t   compress data in archive using gzip algorithm. The optionnal\n");
	ui_printf("\t\t   argument is the gzip compression to use: it ranges from 0\n");
	ui_printf("\t\t   (no compression, fast processing) to 9 (max compression,\n");
	ui_printf("\t\t   slow processing). Note: there is no space ! Example: -z6\n");
	ui_printf("   -y [level]\t   compress data in archive using bzip2 algorithm (NOT\n");
	ui_printf("\t\t   IMPLEMENTED)\n");
	ui_printf("\t\t   by default the archive is not compressed\n");
	ui_printf("   -s <integer>    split the archive in several files of size <integer>\n");
	ui_printf("   -S <integer>    first file size (if different from following ones) --\n");
	ui_printf("\t\t   requires -s\n");
	ui_printf("   -p\t\t   pauses before writing to a new file -- requires -s\n");
	ui_printf("   -D\t\t   stores directories excluded by the -P option or absent from\n");
	ui_printf("\t\t   <path list> as empty directories\n");
	ui_printf("   -Z <mask>\t   Filenames covered by this <mask> are not compressed. By\n");
	ui_printf("\t\t   default all files are compressed (if compression is used)\n");
	ui_printf("   -Y <mask>\t   Filenames covered by this <mask> and not covered by -Z\n");
	ui_printf("\t\t   <mask> are the only to be compressed. By default all files\n");
	ui_printf("\t\t   are compressed.\n");
	ui_printf("\n");
	ui_printf("Restoring options (to use with -x) :\n");
	ui_printf("   -k\t\t   do not remove files marked as destroyed since the reference\n");
	ui_printf("\t\t   backup (see also -A)\n");
	ui_printf("\t\t   -k has no effect when used with -n\n");
	ui_printf("   -r\t\t   restores files only if they are absent or more recent than\n");
	ui_printf("\t\t   those on the filesystem\n");
	ui_printf("\n");
	ui_printf("Reading options (to use with -x, -d, -t, -l, -C, -c)\n");
	ui_printf("   -i <named pipe> use the given pipe instead of standard input to read data\n");
	ui_printf("\t\t   from dar_slave\n");
	ui_printf("   -o <named pipe> use the given pipe instead of standard output to send orders\n");
	ui_printf("\t\t   to dar_slave.\n");
	ui_printf("\t\t   These two options are only available if the basename of the\n");
	ui_printf("\t\t   archive to read is -, which means reading the archive from a\n");
	ui_printf("\t\t   pipe. For -C and -c options the archive to read is the one\n");
	ui_printf("\t\t   given with -A option: the archive of reference\n");
	ui_printf("\n");
	ui_printf("Listing options (to use with -l):\n");
	ui_printf("   -T\t\t   tree output format. This was the default format used before\n");
	ui_printf("\t\t   version 1.2.0\n");
	ui_printf("\n\n");
	ui_printf("See man page for more details, not all common options are available for each\n");
	ui_printf(" mode of operation.\n");
