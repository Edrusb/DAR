from 2.5.1 to 2.5.2
- fixed bug met when permission is denied while reading or writing slices
- fixing bug that avoided creating an archive at the root of the filesystem
- fixing bug met in rare situation while reading in sequential-read mode
  an archive encrypted using gnupg encryption. In that situation libdar
  may fail reading the archive (but succeeds in normal read mode) issuing
  an obscure message (message has also been fixed).
- code simplification, removing field reading_verion from class crypto_sym
  as its parent class tronconneuse already have such information
- removed extra newline displayed by dar at end of execution
- fixed bug avoiding dar to properly read an entry (reporting CRC error)
  when specific sequence of character (start of escape sequence) fall at
  end of the read buffer of the escape layer.
- speed optimization for datetime class
- fixed bug that avoided dar reading archives in sequential read mode
  while reading from a pipe
- fixed bug in non regression test routine provided beside dar/libdar
- fixing display message showing not always in the correct context
- fixing case inversion leading the cache layer not to be used when
  necessary and used when useless while reading an archive
- improved heuristic in dar_manager to determine the date a file has been
  deleted.

from 2.5.0 to 2.5.1
- fixed display bug in dar_manager met when using -o option and adding
  options for dar that does not exist for dar_manager (like -R option)
- reactivating disabled (by mistake) optimization for some read-only dar
  manager database operations
- fixing compilation issue with dar against gcc 4.9.2
- fixing syntax error in dar_manager message
- fixed bug that forbade dar_manager to write down modified database
  when only database header was modified (-o, -b, -p switches).
- adding dar_manager database format version information with -l option
- fixed libdar inability to read dar_manager's database format version 4
- adapting code to build under cygwin environment, where thread_local seems
  broken
- fixed output to stderr in place of stdout for Licensing information
- fixed bug met when permission is denied while reading or writing slices
- fixing bug that avoided creating an archive at the root of the filesystem

from 2.4.x to 2.5.0
- added support for posix_fadvise()
- added entrepot class hierarchy to support in the future other storage
  types than local filesystem for slices
- API: added access to the entrepot through the API
- modified class hash_fichier for it becomes entrepot independent
- API: extended libdar API with an additional and more simple way to read
  an archive: archive::get_children_in_table() method, see
  doc/API_tutorial.html for details
- added support for extX (see lsattr(1)) and HFS+ (birthtime date)
  Filesystem Specific Attributes (FSA).
- dar is now able to skip backward when a file is found to be "dirty" at
  backup time. This avoids wasting space in archive but is only possible if
  the backward position is located in the current slice and no slice
  hashing nor strong encryption is used. Of course if the archive is
  written to a pipe or to stdout, skipping back to retry saving data at the
  same place is neither possible, --retry-on-change option stays possible
  in that cases at the cost of data duplication (wasted bytes amount, see
  --retry-on-change man page).
- by default dar now performs up to 3 retries but do not allow for wasting
  bytes if file has changed at the time it was read for backup,
  this can be modied using --retry-on-change option.
- With the same constraints as for a changing file, if a file is saved
  compressed but its compressed data uses more space than uncompressed,
  the file's data is resaved as uncompressed. However, if skipping backward
  is not possible, data is kept compressed.
- if system provides it, dar uses "Linux capabilities" to check for the
  ability to set file ownership when dar is not run as root. This allows dar
  to restore ownership when allowed even when it is not run as superuser.
- removing dar-help tool used to build dar -h messages. That tool became
  useless for a long time now.
- added several more specific verbosity options: -vm, -vf and -vt
- added support for microsecond timestamps (atime, mtime, ctime, birthtime)
- Using lutime() to restore atime/mtimes of symlink on systems that support
  it.
- API: removed backward compatible API for old libdar 4.4.x
- API: simplified implementation of archive isolation thanks to isolation
  evolution features brought by release 2.4.0. Memory requirement is now
  devided by two compared to releases of previous branch (2.4.x).
- dar has been updated to use this new API for archive isolation
- added exclude-by-ea feature to avoid saving inodes that have a particular
  user defined EA set.
- added comparison of an isolated catalogue with a filesystem, relying on
  embedded data CRC and inode metadata in absence of the saved data.
- The new archive format (version 9) holds the ciphering algorithm used
  at creation time, only the passphrase is now required at reading time and
  -K option may be ignored which will lead dar to prompt for passphrase.
- Adding support for public key encryption (GnuPG) supporting several
  encryption keys/recipients for a given archive
- Adding support for public key signature when public key encryption is used
- While listing archive contents, directories now show the size and average
  compression ratio of the data they contain
- Archive summary (-l with -q options) now reports the global compression
  ratio
- added the -vd switch to only display current directory under process for
  creation, diff, test, extraction and merging operations
- added xz/lzma compression support
- added -Tslicing listing option to show slice location of files inside
  an archive archive.
- isolated catalogues now keep a record of the slicing layout of their
  archive of reference in order to provide -Tslicing feature when used
  on the isolated catalogue alone.
- However if an archive has been resliced (using dar_xform) after its
  isolated catalogue has been generated, using -Tslicing option with the
  isolated catalogue would give wrong information. To overcome that, it
  is possible to specify what is the new slicing of the archive of
  reference by using the -s and -S options in conjunction with -Tslicing
- added dar_split command to provide on-fly multi-volume archive support
  for tape media
- experimental feature to have libdar using several threads (not activated
  by default due to poor performance gain)
- dar now aborts when a given  user target cannot be found in included file
- added sha512 hashing algorithm beside already available md5 and sha1, the
  generated hash file can be used with 'sha512sum -c <file>' command
- removed useless --jog option for memory management
- removed previously deprecated -y/--bzip2 command, bzip2 compression
  remains available using -z option (-zbzip2 or --compression=bzip2)
- replaced SHA1 by SHA224 to generate IV for encryption blocks, this
  slightly improves randomness of IV and stay available when libgcrypt is
  run in FIPS mode

from 2.4.19 to 2.4.20
- fixed display bug in dar_manager met when using -o option and adding
  options for dar that does not exist for dar_manager (like -R option)
- reactivating disabled (by mistake) optimization for some read-only dar
  manager database operations
- fixing compilation issue with dar against gcc 4.9.2
- fixing syntax error in dar_manager message
- fixing bug that avoided creating an archive at the root of the filesystem

from 2.4.18 to 2.4.19
- fixed missing quote in dar_par.dcf which is called by the par2 directive
- fixed bug in dar_manager's -u option, not displaying most recent files of
  an archive when they have been marked as removed in a more recent archive
  of the same dar_manager database.
- fixed bug met while restoring in sequential read mode a file having
  several copies (was modified at the time it was saved and retry-on-change
  was set).

from 2.4.17 to 2.4.18
- Initial Vector used for strong encryption was set with pseudo-random data
  generated using SHA1 message digest and blowfish cipher, which are not
  available when ligcrypt is running in FIPS mode. Since 2.4.18 we now use
  SHA256 and AES256 for IV assignment in order to have libdar compatible
  with FIPS mode. For data encryption nothing changes: the cipher specified
  (-K, -J, -$ options on CLI) are used as before.
- fixing bug met when performing archive isolation in sequential-read mode,
  If an archive corruption or truncated archive leads an inode to not have
  its CRC readable, dar aborts and issues a BUG report.
- updating list of project relying on dar/libdar

from 2.4.16 to 2.4.17
- fixing issue when case insensitive comparison was requested and invalid
  wide char for the current local was met in a filename. In such situation
  the corresponding file was never saved before (considering a filesystem
  error for that file), while now the ASCII case insensitivity is used
  as fallback.

from 2.4.15 to 2.4.16
- fixing archive listing displayed information for catalogue size when
  archive is read in --sequential-read mode
- fixing bug that avoided dar releases 2.4.x up to 2.4.15 to read encrypted
  archive generated by dar release 2.3.x and below
- adding informational note at the end of ./configure script execution
  when --enable-mode has not been used.
- adding support for case sensitivity in filename comparison (-an option)
  for other character sets than POSIX/C locale like Cyrillic for example.
- fixing bashisms in doc/samples scripts

from 2.4.14 to 2.4.15
- fixing bug met when reading an encrypted archive in sequential mode
- fixing bug met when reading an encrypted archive in sequential mode from
  an anonymous pipe
- changed option '-;' to -9 as '-;' does not work on all systems with getopt
  (only long option equivalent --min-digits worked) for dar, dar_cp,
  dar_manager, dar_xform and dar_slave commands.
- fixing bug met when restoring deleted files in sequential read mode and
  some directory where they should be "restored" are not readable or
  could not be restored earlier
- adding extra buffer to handle sequential read of encrypted archive
  when the last crypto block contains some but not all clear data after
  encrypted one (the archive trailer).
- fixing compilation issue using clang
- fixing bug that prevents using -~ option with on-fly catalogue isolation
  in order to execute an user command once on-fly isolation has completed
- added some autoconf magic to determine the correct (BSD/GNU) flag to
  use with sed in order to activate regular expression parsing
- new implementation of mask_list class which is compatible with libc++
- fixed bug met on FreeBSD with dar_xform where the system provides a
  standard input file descriptor in read-write instead of read-only mode.

from 2.4.13 to 2.4.14
- limiting memory consumption of the cache layer to stay below 10 MiB, under
  certain circumstances (very large archive), it could grow up to an insane
  value like 50% or the available RAM. reducing to 10 MiB does not impact
  performance in a noticeable manner while it avoids system to swap out due
  to the libdar cache layer becoming huge.
- added --with-pkgconfigdir to define an alternative path for libdar
  pkgconfig file (to ease portability to FreeBSD)
- modified some Makefile.am for better FreeBSD support
- fixed display bug in XML listing output concerning hard linked inodes
- fixing typo in man page
- fixing bug met while isolating a catalogue in --sequential-read mode.
  Using such isolated catalogue lead dar report an error about inaccessible
  EA.
- displaying compression rate for sparse files even when they are
  uncompressed, sparse file detection also leads to compress files
- fixing bug that lead libdar to fail comparing an inode having EA when
  comparison is done in --sequential-read mode
- fixing display bug in in ligcrypt check of configure script for minimum
  required version
- fixing 'make clean' to remove some forgotten files generated by 'make'

from 2.4.12 to 2.4.13
- adding initialization value for two variables to avoid inappropriate
  warning when compiling with -Wall option
- reducing UNIX_PATH_MAX by the system when not defined from 108 to 104
  bytes to accommodate BSD systems
- fixing assignment operator of class criterium that was not returning
  any value as it should
- removing useless boolean expression that always succeeds in logical
  AND expression
- adding support for back-slash of quoting characters in DCF files
- fixed compilation issues with clang / FreeBSD, Thanks to Neil
  Darlow's server ;-)
- fixed compilation warning due to deprecated symbols in libgcrypt
  header files
- replaced gnu make specific rules by legacy ones to avoid automake
  warning about them
- removed old unused stuff from misc sub-directory
- adding warning at compilation time if libgcrypt used is older than
  1.6.0
- adding warning at execution time if hash computation is requested
  with slices greater than 256 Gio and ligbcrypt dynamically or
  statically linked is older than 1.6.0
- adding alternative methods in list_entry API class to return dates as
  number of seconds
- fixed bug in hour-shift (-H option) when comparing dates from an old
  extracted catalogue (archive format 7 or older).
- fixed documentation bug about the meaning of the compression ratio
- fixed a display bug about the "compression flag" wrongly displayed
  for uncompressed files
- fixed unhandled exception when giving non number argument to -1 option

from 2.4.11 to 2.4.12
- for correctness fixed delete vs delete[] on vector of char (not incidence
  reported)
- fixed out of range access in routine used to read very old archive format
- fixed error in logical expression leading a sanity test to be useless
- removed duplicated variable assignment
- updated FAQ
- fixed typo and spelling errors
- fixed bug (reported by Torsten Bronger) in the escape layer leading libdar
  to wrongly reporting a file as corrupted at reading time
- fixed bug in the sparse file detection mechanism that lead the minimum size
  hole detection to become a multiple of the default value or specified one.
  This implied a less efficient reduction of sparse files because smaller
  holes in files were ignored
- fixed and updated man page about --go-into option
- updated full-from-diff target in /etc/darrc default file
- added a debug option in hash_file class (option only used from testing
  tools) to troubleshoot sha1/md5 hash problem on slices larger than
  (2**38)+63 bytes, bug reported by Mike Lenzen and understood by Yuriy
  Kaminskiy at libgcrypt. Note: This bug is still open due to an integer
  overflow in libgcrypt.
- backported from current development code an additional and more simple
  way to read an archive using the libdar API. This API extension is not used
  by dar command-line tools for now.
- Fixing installation of libdar header files on Darwin, where "DARwin" macros
  were not filtered out from the generated libdar header files.
- Fixing self reported bug 'generic_file.cpp line 309' met while comparing an
  archive with a filesystem
- Update code in order to compile with gcc-4.8.2 in g++11 mode (partial
  implementation and adaptation of Fabian Stanke's patch)
- Fixing bug met while performing a verbose archive listing in sequential
  read mode
- Added Ryan Schmidt's Patch to properly display status at end of ./configure
  script under BSD systems (in particular Mac OS X)
- Updating configure.ac script to fix warning reported by autoconf when
  generating the ./configure script
- Addressed portability problem with BSD systems that do not provide a -d
  option to the 'cp' command, preventing proper installation of the Doxygen
  documentation. Fix based on patch provided by Jan Gosmann.

from 2.4.10 to 2.4.11
- Modified behavior of 'dar -h' and 'dar -V', both now return 0 as exist
  status instead of 1 (which means syntax error).
- Fixed bug: -Q is now available with -V under the collapsed form -QV or -VQ
- fixed typo in documentation
- fixed memory leakage met when dar fails a merging operation because the
  resulting archive is specified in an directory that does not exist.
- fixed bug met when isolating a differential backup in sequential read mode
- fixed bug about slice file permission not taking care about umask variable
  when the --hash feature is used.
- fixed performance issue when reading an archive over a pair of piles using
  dar_slave (possibly over ssh) when the archive makes use of escape marks and
  when no encryption is used
- added target "full-from-diff" in /etc/darrc default file
- fixed bug avoiding reading an truncated archive in direct access mode with
  the help of an external catalogue.
- new and better implementation of archive extraction in sequential read mode
- fixing bug (segfault) met when hitting CTRL-C while reading an archive in
  sequential mode
- fixing libdar.pc for pkg-config for the cflags given to external applications
- fixed memory allocation/desallocation mismatches (delete vs delete [] )
  concerning four vector of chars.
- fixed error in logical expression leading a sanity test to be useless

from 2.4.9 to to 2.4.10
- fixing libdar about dar_manager database corruption that occurred when
  deleting the first archive of a base containing a plain file only
  existing in that first archive.
- Added code to cleanup databases instead of aborting and reporting
  that previously described type of database corruption.
- Added feature when comparing archive with filesystem in order to report
  the offset of the first difference found in a file. This was necessary to
  help solving the following bug:
- fixed bug in sparse file detection mechanism that could lead in some very
  particular (and rare) situations to the loss of one byte from file being
  saved. In that case testing the archive reported a CRC error for that
  file. So if you keep testing achives in your backup process and have not
  detect any problem, you can then keep relying on your old backups. This
  bug also expressed when merging archives: dar aborted and reported that a
  merged file had a different CRC than the one stored in the archive of
  reference.

from 2.4.8 to 2.4.9
- fixed bug: during differential backup dar saved unchanged hard linked inode
  when a hard link on that inode was out of the -R root directory. This also
  has the effect to always save files with long names on NTFS filesystems (!)
- Adapted patch provided by Kevin Wormington (new messages displayed)
- Fixed syntax error in configure script about execinfo detection
- Removed unused AM_ICONV macro from configure script
- fixed bug met under Cygwin when auxiliary test command failed to link when
  libgcrypt was not available.
- updated mini-howto by Grzegorz Adam Hankiewicz
- updating French message translations
- restricted security warning for plain files and hard linked plain files
- fixed display bug in dar_cp when manipulating files larger than 2 GB
- fixed SEGFAULT met when adding to a dar_manager database an archive which
  base name is an empty string
- improved error message, reporting the -B included file in which a syntax error
  has been met
- modified dar_manager database to consider both ctime and mtime as timestamp
  value for data of saved files. This suppresses the warning about badly ordered
  archives in database when at some files have been restores from a old
  backup.

from 2.4.7 to 2.4.8
- documentation fixes and updates
- improved database listing efficiency
- reduced memory usage of the caching layer in libdar
- fixed self reported bug caused by memory allocation failure
- fixed a SIGSEGV caused by double free in dar_xform when syntax error is
  met on command-line
- dar_xform was not able to properly transform archive generated by dar older
  than release 2.4.0
- fixed bug that lead dar be unable to remove a directory at restoration time
- replaced old remaining "bcopy" occurrence by a call to memcpy
- fixed compilation warning under ArchLinux
- fixed crash met while creating a backup with on-fly isolation
- fixed libdar behavior when reading a strongly corrupted encrypted archive

from 2.4.6 to 2.4.7
- fixing memory allocation bug in crc class, that lead glibc aborting dar
- reviewed code and replaced some remaining occurences of bzero/bcopy by
  their recommended replacement version
- fixed compilation problem under Solaris
- fixed bug that could lead a file to be wrongly reported as different from the
  one on filesystem, when that file has been changed while it was saved, then
  saved a second time but has its size modified since the first time it was
  saved.

from 2.4.5 to 2.4.6
- fixed bug met while interrupting compressed archive creation, the resulting
  archive was only readable in --sequential-read mode
- fixed bug met while reading an interrupted archive in sequential reading
  mode. It lead dar to not release some objects from memory at the end of
  the operation, which displayed an ugly error message from libdar selfcheck
  routine.
- fixed message reporting unknown system group when converting gid to name
  (was reporting unknow "user" instead of unknown "group")
- removing the $Id:$ macro from file as we moved from CVS to GIT
- updating package to distribute Patrick Nagel's scripts and documentation
- updated URL pointing to Patrick Nagel's web site
- updating documentation describing how to get source code from GIT (no more
  from CVS)
- fixed typo in configure.ac
- added info on how to build a brand-new dar tarball from source in GIT
- modifies the end of messages shown by -h option to point to man page for
  more _options_ rather than _details_
- replaced &minus; in the HTML generated documentation by a standard ASCII dash
- fixed alignement bug in CRC calculation that lead libdar based application to
  crash on sparc-based systems.

from 2.4.4 to 2.4.5
- updated sample scripts to be compatible with dar's --min-digit option
- added missing included file to be able to compile with gcc-4.7.0
- removing an unused variable in filtre.cpp
- fixed a display bug when comparing archive with filesystem, leading to a
  segmentation fault (%S in place of %i in mask)
- fixed bug leading dar to not restore some directories from differential
  backups when they are absent in the filesystem
- fixed bug that show a "uncaught exception" message at the end of archive
  listing for dar shared binaries only, compiled in infinint mode, under
  ArchLinux
- updated the configure script to link with libexecinfo when available
- added possibility to disable the use of execinfo in libdar thanks to the
  new --disable-execinfo option for the ./configure script
- added Andreas Wolff patch to fix bug under Cygwin (segfault on program
  termination).

from 2.4.3 to 2.4.4
- fixed man pages in the NAME section: added whatis entry
- fixed segfault: in the internal error reporting code (delete[] in place of
  free())
- fixed bug: dar_manager was not able to read properly the latest generated
  databases version when having Extended Attributes recorded for some files
- avoided reporting unreleased memory block when compilation optimization
  have been used (dar, dar_manager, dar_cp, dar_slave, dar_xform do all
  reported unreleased memory when gcc optimization was used in "infinint" mode)

from 2.4.2 to 2.4.3
- fixed absurd compilation warning about possibly uninitialized variable
- added -ai switch to dar_manager to disable warning about improper file order
  in database.
- fixed bug met while changing order of archives in a dar_manager database
- avoiding concurrent use of -p and -Q options, error message shown in that
  situation.
- modified slice overwriting detection code to use a single atomic system call
  to create a new slice
- replaced delete by delete[] for conversion routine of user/group to uid/gid
- added the possibility to disable speed optimization for large directories
- added memory troubleshooting option --enable-debug-memory
- simplified class CRC implementation
- fixed failed memory release upon exception thrown in class deci
- modified tlv, tlv_list classes and ea_filesystem routines to not require
  any corresponding temporary objects in libdar (saves a few new/delete calls)
- fixed silent bug in tlv class: due to the absence of copy constructor and
  destructor, some memory was not released and referred after the corresponding
  object's destruction
- modified generic_file class to avoid temporary crc objects
- fixed bug in header class that lead unreleased field (this class lacked a
  destructor), memory impact was however little: 10 bytes per slice
- fixing bug in class tlv: unreleased memory
- added protection code in class deci to properly release memory against
  exception thrown from called routines when user interrupts the operation.
- replace previous internal stack report code by backtrace()/backtrace_symbols()
- complete change of the implementation of the 'special-alloc' feature:
  the old code eat too much memory not to be adapted to new features added
  in release 2.4.0. This new implementation also bring some speed improvement

from 2.4.1 to 2.4.2
- fixing bug met when reading an archive in sequential-read mode
- fixing bug while filtering in sequential-read mode
- fixing backward compatibility in dar_manager with old archives (wrong dates
  for deleted files).
- fixing compilation problem on certain systems (missing #include statement)
- fixing documentation syntax and spelling

from 2.4.0 to 2.4.1
- adding information about "Cache Directory Tagging Standard" in doc/Feature.html
- fixing typo in doc/presentation.html
- fixing incomplete information in doc/usage_notes.html
- rewriting sample scripts from tcsh to bash in doc/usage_notes.html
- updating Swedish translation with the last version from Peter Landgren
  which has been forgotten for 2.4.0, sorry.
- fixing installation problem, where src/libdar/nls_swap.hpp was not installed
- fixing version returned by libdar_4_4::get_version to let kdar (or other
  external program relying on the backward compatible API) working as expected
- fixed bug in the code determining whether a directory is a subdirectory of
  another. This bug could lead dar to restore more files that just the one that
  were specified with -g option.
- added -k option to dar_manager for backward compatible behavior of dar_manager
- fixed bug in dar_manager, was recording the wrong date of EA removal (when
  an inode has dropped all its EA since the archive of reference was done).
- adapted dar_par_test.duc sample script to dar-2.4.x new behavior
- adapted libdar to MacOS X to restore mtime date after EA, as on this system,
  modifying some system specific EA implies updating the mtime. But dar cannot
  yet store and restore the "creation date", it needs specific MacOS X code,
  as this value is not available through Posix EA.
- fixed backward compatibility bug where dar 2.4.0 was not able to read archive
  containing only a catalogue (differential backup when no change occurred,
  snapshot backup, extracted catalogue) generated by dar 2.3.x or older.
- fixed self reported internal error met when dar is merging archives generated
  by dar 2.3.x versions.

from 2.3.x to 2.4.0
- hard links support for pipes, soft links, char and block devices has been
  added (so far, only hard links on plain files were supported)
- added rich overwriting feature for merging archives (-/ option)
- changed default behavior of dar: it no more tries to preserve the atime of
  read files, which had as side effect to modify the ctime. See man page for
  -aa and -ac options for details
- simplified the use of the "sed" command in Makefiles.am files
- integrated Wiebe Cazemier's patch for man page
- -E option has been extended to work also when generating a single sliced
  archive (no need to have -s option to be able to use -E option).
- slice header has been extended to store additional information (slice
  layout is now redundant in each each slice and may be used as backup from
  a slice to another in case of corruption).
- dar does no more need to read the first then the last slice of an archive to
  get its contents, it now instead only needs the last slice.
- an isolated catalogue can now be used as backup of the original archive's
  internal catalogue (-A option in conjunction with -x option for example)
- added directory look-up optimization (adaptation of Erik Wasser's patch)
- added -e option support (aka dry-run) to archive testing
- added the possibility to set permission and ownership of generated slices
- re-designed the libdar API to have all optional parameters carried by class
  object in a single argument, the aim to not break backward compatibility of
  the API upon each new feature addition. The libdar_4_4 namespace can be used
  for backward compatibility with older applications (see API documentation)
- added retry on change feature (-_ option).
- changed storage for UID and GID from U_16 to infinint to support arbitrarily
  larger UID and GID
- added lzo compression support
- dar_manager now uses an anonymous pipe to send configuration to dar, this
  solves the problem due to command-line limitation.
- dar now stores a "removal date" when a file disappeared since the archive of
  reference was done (so far only the information that a file was removed was
  stored). This is needed for dar_manager (see next new feature)
- dar_manager can now better restore the status of a set of files exactly as
  it was at any given time from a set of full and differential backups. In
  particular, it does no more restore files that were removed at the requested
  date.
- added check in dar_manager to detect conditions where a file has a
  modification date that has been set to the past. Two objectives are at the
  root of this feature: proper restoration of files and detection of possible
  rootkit
- added mode for restoration that avoid restoring directory tree which do not
  contain any saved files (in particular when restoring a differential backup)
  see man page for -D option for more details.
- reviewed implementation of code managing Extended Attributes (much faster now)
- added batch feature (-@ option) to dar_manager
- added Furtive Read Mode support (O_NOATIME + fdopendir): when the system
  supports it, while reading data, dar does not modify any date (ctime or atime)
- added the possibility to have sequential reading of archives (ala tar) see
  option --sequential-read
- added the possibility to read from a pipe (single pipe, without dar_slave)
  (use '-' as filename in conjunction with --sequential-read)
- added -P -g -[ and -] options to archive listing (-l option)
- added sparse file detection mechanism (can save and restore sparse files)
- added dirty flag in archive for file that changed while being saved. By
  default a warning is issued when the user is about to restore a dirty file,
  this can be changed thanks to the --dirty-behavior option
- -R option can receive an arbitrary string (still is excepted an empty string)
  In particular dar will no more complain if the given path contains // or \\
  however it must in a way or another point to something that exists!
- added a short listing feature (listing only the summary), (using both -l and
  -q options)
- extended conditional statements in included files (DCF) with user defined
  targets (see user target paragraph at the end of dar man page) User targets
  let the user add a set of options using a single keyword on command-line.
- a sample /etc/darrc is now proposed with some user targets for common
  operation like compression without compressing already compressed files.
- dar now releases filedescriptors of archive of reference(s) before proceeding
  to the operation (differential backup, archive isolation, etc.)
- user can add a comment in archive header some macro are provided for common
  options (see --user-comment in man page). This comment can be seen when
  listing an archive in verbose mode (-l -v) or when displaying the archive's
  summary (-l -v -q).
- added a "security warning" feature if ctime has changed in filesystem while
  inode has not changed at all (-asecu disables this feature). This is to target
  possible rootkit files. Note that this may toggle false positive, if for
  example you change EA of a file.
- added feature: DAR_DUC_PATH environment variable, which let dar look for a DUC
  file (see -E and -F options) in the given path.
- added feature: DAR_DCF_PATH environment variable, same as previously but for
  DCF files (see -B option).
- added two targets for conditional syntax: "reference:" and "auxiliary:"
- weak blowfish implementation has been removed (no backward compatibility as
  it suffered of a weak Initial Vector (IV) initialization), but the normal
  blowfish encryption stays in place.
- Due to openssh licensing, replaced openssh by libgcrypt dependancy (which
  stays optional).
- added new cyphers aes256, twofish256, serpent256 and camellia256
- added the hash feature (--hash option), supporting md5 and sha1 algorithms.
  The hash is calculated on the fly for each slice, before its data is even
  written to disk. This let one to check for media corruption even before a
  multi-sliced archive is finished. However this does not prevent an archive to
  be corrupted due to a software bug (in dar, libdar or in a external library),
  so it is always recommended to test the archive using dar's -t option.
- -G option (on-fly isolation) has been replaced by -@ when creating an archive,
  to reduce the number of letter used for options. This also let available the
  usual switches associated to -@ option to define an encryption algorithm and
  passphrase for the on-fly isolated catalogue.
- slices number may be padded with zeros (--min-digits option) Note that if using
  this option when creating an archive, this same option is required for any
  operation on this archive
- added -konly feature to only remove files recorded as suppressed at
  differential backup restoration time.
- dar and libdar now store keys in secure memory (with the exception that a DCF
  is parsed in unlocked memory, having a key in a DCF file is not as secure as
  having dar asking for password at execution time using the "-K :" syntax)
- added hook for backup: a user command or script can be run before saving and
  after backing up files that match a given mask all along the backup process
  (see -<, -> and -= options).
- added feature: -alist-ea let the user see the Extended Attributes of files
  while listing an archive contents.
- dar_manager can receive negative numbers to point to archive counting by the
  end of the database.
- dar and libdar stay released under GPL 2.1 (not under GPL 3, and not lesser
  GPL, neither)
- setting the "little/big endian" to usual meaning (it was inverted in the code)
  this does not change the dar's behavior nor its compatibility with different
  systems or older libdar versions.
- added -ai option to avoid warning for unknown inode types
- added support for Solaris's Door files
- added feature: decremental backup

from 2.3.11 to 2.3.12
- avoiding concurrent use of -p and -Q options, error message shown in that
  situation.

version 2.3.10 to 2.3.11
- fixed bug in the detection code of an existing archive of the same name when
  creating a new archive (improperly considered some files sharing a part of
  the archive basename as old slices of an archive of the same base name).
- fixed a display bug. When using -v to see which arguments get passed to dar
  by mean of configuration file (DCF file, ~/.darrc or /etc/darrc) the last
  argument found in file was not displayed.
- fixed two bugs (one in decompression routine, the other in decryption routine)
  that lead dar to segfault or run into an endless loop when reading a very
  corrupted archive.
- added -H option with -d option
- fixed bug leading Dar to report some files to be removed at restoration time
  to be of different type than the expected one when the reference used for
  that archive (difference backup) was an extracted catalogue.
- fixed bug in dar's command_line parsing leading dar to free twice the same
  block of memory when an argument containing a double slash was given to
  -G [SF 3162716].
- probable fix (problem difficult to reproduce) for double memory release in
  the storage class [SF 3163389]

version 2.3.9 to 2.3.10
- added patch by Jan-Pascal van Best to have -[ and -] options working with
  archive merging
- fixed bug in displaying dates [SF 2922417]
- enhanced pseudo random number generation used in dar
- added an error message when an include/exclude file listing does not
  contains an invalid path (instead of a self reported bug message).
- modified message displayed when some slice of an old archive having the
  same name are present in the destination directory (backup, isolation, merging,
  dar_xform)

from 2.3.8 to 2.3.9
- fixed bashism in doc/examples/pause_every_n_slice.duc sample script
   [SF 2020090]
- added Jason Lewis's script "dar_backups.sh" which is an enhanced version
  of n the script done by Roi Rodriguez Mendez & Mauro Silvosa Rivera.
- added message asking software upgrade to handle case when new archive format
  (used by dar >= 2.4.0) is provided to dar
- very little optimization of the reading process of EA
- updated FAQ
- replaced "Catalogue" by "Archive Contents" in output message (-l -v).
- added Sergey Feo's patch to dar_par.dcf
- added check against stddef.h header file presence in configure script
- fixed spelling
- added Charles's Script in doc/sample
- added -q option to dar
- added licensing exception to allow distribution of dar beside OpenSSL library
- Bug fix: during archive diff (only), dar restore atime of file in the backup
  instead of file in the system before opening it for reading.
- tested dar with valgrind

from 2.3.7 to 2.3.8
- fixed bug in libdar met when user supply an empty file as a list of file to
  include or exclude ( -[ and -] options )
- fixed bug concerning elastic buffers used beside strong encryption. No
  security issue here, just in some almost rare situations the generated archive
  was not readable (testing your archive prevents you loosing data in this
  situation)
- added some speed optimizations
- avoided warning to appear without -v option set, when an error is met while
  fetching value of nodump flag (flag not supported on filesystem for example).

from 2.3.6 to 2.3.7
- fixed bug in dar_manager about the localization of the archive in which to
  find the latest EA
- fixed bug in configure script to properly report full blowfish encryption
  support
- fixed a bug in the statistics calculus of dar_manager for most recent files
  per archive
- removed inappropriate internal error check
- added --disable-libdl-linking option
- fixed mistake in API tutorial
- updated Swedish translation by Peter Landgren
- fixed bug in the file filtering based on listing file ( -[ option )
- fixed typo and spelling errors in documentation
- updated code for clean compilation with gcc-4.2.3
- updated code for clean compilation with gcc-4.3 20080208 (experimental gcc)

from 2.3.5 to 2.3.6
- fixed Makefile.am in src/dar_suite (removed "/" after $(DESTDIR))
- fixed bug in regex mask building when not using ordered masks
- fixing bug that led dar_manager to report no error while some files failed
  to be restored due to command-line for dar being too large.
- fixed bug met when user aborts operation while dar is finalizing archive
  creation [SF #1800507]
- fixed problem with execvp when dar_manager launches dar

from 2.3.4 to 2.3.5
- changed displayed message when adding a hard link to an archive while
  performing a differential backup
- added back the possibility to use old blowfish implementation (bfw cipher)
- integrated optimization patch from Sonni Norlov
- updated Swedish translation by Peter Landgren
- updated French translation
- fixed broken Native Language Support in 2.3.x (where x<5)

from 2.3.3 to 2.3.4
- fixed behavior when differential backup is interrupted (no more store file
  that would have been read if no interruption had been done as "deleted" since
  the archive of reference) [SF #1669091].
- added official method to access catalogue's statistics through the API (for
  kdar next version).
- Fixed syntax error in dar_par_create.duc and dar_par_test.duc files (Parchive
  integration with dar).
- minor spelling fix in error message (compressor.cpp)
- added Wiebe Cazemier's two patches for dar man page
- integrated patch from Dwayne C. Litzenberger to fix weakness in dar's
  implementation of the blowfish encryption.
- improved the returned message when an invalid path is given as argument
- updated doc/sample/sample1.txt script file

from 2.3.2 to 2.3.3
- avoid using getpwuid() and getgrgid() for static linking.
- fixed typo in dar's man page
- update FAQ
- fixed bug: uncaught exception thrown when CTRC-C was hit while dar waits an
  answer from the user [SF #1612205]
- fixed bug: unusable archive generated when CTRC-C was hit and blowfish
  encryption used [SF #1632273]
- added a check to verify that the libdar used is compatible with the current
  dar suite programs [SF #1587643]
- fixed bug: added workaround for the right arithmetic shift operator (the
  binary produced by gcc-3.4.2 produces computes "v>>s" equal to "v" when when
  v is a integer field composed of s exactly bits. It should rather compute it
  to zero...).
  this problem leads 32 bits generated archive incompatible with 64 bits
  generated archive only when blowfish is used.
- fixed bug met when the inode space is exhausted, thanks to "Jo - Ex-Bart" for
  this new feedback. [SF #1632738]
- replaced &, <, >, ' and " in XML listing by &...; corresponding sequence.
  [SF #1597403]
- dar_manager can receive arguments after stick to -o options (it is an error
  in regard to documentation, but no warning was issued in that case, leading
  to confusion for some users) [SF #1598138]
- updated Veysel Ozer's automatic_backup script
- fixed hard link detection problem [SF #1667400]
- verbose output did not displayed hard links information
- merged patch on dar_cp by Andrea Palazzi to have it to return EXIT_DATA_ERROR
  when some data have been reported [SF #1622913]

from 2.3.2 to 2.3.3
- avoid using getpwuid() and getgrgid() for static linking.
- fixed typo in dar's man page
- update FAQ

from 2.3.1 to 2.3.2
- fixed bug in Native Language Support when --enable-locale-dir was not set
  (Thomas Jacob's patch)
- updated Swedish translation by Peter Landgren
-  --verbose=skipped was not available (only the short -vs form was available)
- reviewed regex with ordered mask for the feature to better fits user's need
  (Dave Vasilevsky's feedback)
- fixed bug where compression algorithm was changed to maximum (fixed with
  Richard Fish's adequate patch)
- fixed tutorial with command line evolution (dar's -g option in particular)
- latest version of Grzegorz Adam Hankiewicz's mini-howto
- fixed bug concerning restoration of only more recent files

from 2.3.0 to 2.3.1
- set back Nick Alcock's patch which has been dropped from 2.2.x to 2.3.x (patch
  name is "Do not moan about every single file on a non-ext2 filesystem")
- fixed compilation problem when thread-safe code is disabled
- integrated Wiebe Cazemier's patch for dar's man page
- fixed bug in listing: -as option also listed files that had EA even when these
  were not saved in the archive
- file permission of installed sample scripts lacked the executable bit
- fixed a bug that appeared when a file is removed while at the time it is saved
  by dar
- avoid having an unnecessary warning appearing when restoring a file in a
  directory that has default EA set
- Cygwin has changed and does not support anymore the path in the form
  "c:/some/where", you have to use "/cygdrive/c/some/where" instead.
  Documentation has been updated in consequence.

from 2.2.x to 2.3.0
- added user_interaction::pause2() method
- added the snapshot feature
- added the Cache Directory Tagging detection feature
- adapted Wesley's patch for a pkgconfig for libdar
- added -[ and -] options (file selection from file listing)
  Important consequence for libdar user programs:
  the fs_root argument is now expanded to full absolute path inside libdar,
  thus the mask you will give for path inclusion/exclusion (the "subtree"
  argument)will be used against full absolute path of files under consideration
  for the operation. Assuming you have fs_root=tmp/A and the current
  directory is /tmp, your mask will be used against strings like
  /var/tmp/A/some/file. (instead of tmp/A/some/file as in the previous API
  version). Things are equal if the fs_root is given an absolute path.
- changed archive format to "05". Due to complete review of EA management.
- upon some signal reception, dar aborts the backup nicely, producing a
  completely formatted archive will all the file saved so far. This archive can
  be take as reference for a further backup to continue the operation at a later
  time.
- dar_manager aborts properly upon certain signal reception (do not let the
  database partially updated).
- dar_slave and dar_xform now recognize when a slicename is given in place of a
  basename
- reviewed thread_cancellation (API change) for it be possible to cancel several
  thread at the same time
- prevent some dead-lock situation that can occur when a signal is received
  inside a critical section
- dar_cp, dar_xform and dar_slave also abort nicely upon signal reception
- dar_manager can now restore files based on a given date (not always the most
  recent version)
- dar_manager now has an interactive mode (-i option)
- change in API, the warning() method need not be overwritten, but the new
  protected method inherited_warning() must be inherited in its place (same
  function, same prototype as the original warning() method).
- dar_manager features are now part of libdar. API has been completed with these
  new features
- added the "last_slice" context (%c with -E option) when creating an archive
- dar now check a file has not been modified while it was reading it, if so it
  reports a warning and returns a specific exit code
- remove included gettext from the package (it is more a source of conflict with
  external gettext and if somebody needs internationalization better is to
  install libintl/gettext on its own).
- added George Foot feedback about the good backup practice sort guide.
- added -e option to dar_manager
- added the progressive_report feature in the API
- dar can now pause every N slice where N >= 1
- integrated Dave Vasilevsky's patch to support Extended Attributes and file
  forks under MacOS X
- added method in API for external program be able to list dar_manager
  databases, their file contents and the statistics
- added the merge/sub-archive feature
- remove [list of path] from command line (-g option is now mandatory)
- added regex expression in filters (-ar/-ag options)
- added -ak option
- added the --comparison-field option (extension of the --ignore-owner option
  aka -O option)
- added the -af option (backup files more recent than a given date, others are
  keept as already saved)
- dar now take care that an escape character can be sent when pressing the arrow
  keys and avoid considering them in this situation
- dar will no refuse to abort if user presses escape when dar asks the user to
  be ready to write to a new slice
- adapted Wesley Legette's patch for an xml archive listing
- added 'InRef' status for EA (same meaning as the one for file's data)

from 2.2.6 to 2.2.7
- updated Swedish translation by Peter Landgren
- fixed bug #37
- added old function (modified in 2.2.6) for backward compatibility
- added German translation by Markus Kamp

from 2.2.5 to 2.2.6
- fixed bug #36
- avoid removing slices when creating archive in dry-run mode (-e option)
- fixed display problem in dar_cp that lead uncaught exception just before exiting

from 2.2.4 to 2.2.5
- limited size of internal buffers allocated on the stack to not
  be greater than SSIZE_MAX when this macro is defined. This comes
  from feedback from "Steffe" at sourceforge after he ported dar
  to HPnonStop.
- integrated Andrey Yasniy's patch: fixed differential backup problem with
  ru_RU.koi8-r locale.
- integrated  Nick Alcock's patch: no warning shown when not on EXT2
  filesystem and nodump feature has been activated.
- avoid having arrow key be interpreted as escape key (while they remains
  an escape key + one char, as received from the tty).
- added part of Kyler Klein's patch for OSX (Tiger) (only concerns included gettext)

from 2.2.3 to 2.2.4
- fixed #35
- added in doc/samples the backup Script of Rodriguez Mendez & Mauro Silvosa
  Rivera
- updated Swedish translation by Peter Landgren

from 2.2.2 to 2.2.3
- error in TUTORIAL (-P only receives relative paths)
- updated FAQ with memory requirement questions/problem
- added Bob Barry's script for determining memory requirement
- added documentation about NLS in doc/NOTES
- fixed bug concerning the << operator of infinint class. This has no
  impact as this operator is not used in dar/libdar.
- added Jakub Holy's script to doc/samples
- fixed bug with patch transmitted from Debian (Brian May) about the
  detection of the ext2_fs.h header.
- added warning in libdar when user asks the nodump flags to be checked against
  while the nodump feature has not been activated at compilation time.
- fixed dar man page about --gzip option usage when using an argument
- now counting as errors the file with too long filename
- now counting the file excluded due to nodump flag as ignored due filter
  selection

from 2.2.1 to 2.2.2
- fixed typo in dar man page (flowfish ;-) )
- -Q option now forces the non terminal mode even when dar is run from a
  terminal (tty) this makes dar possible to run in background without having
  the shell stopping it upon text output.
- removed unused control code for dar's command line syntax
- spelling fix of the tutorial by Ralph Slooten
- added the pertinent part of the memory leak patch from Wesley Leggette
  (there is no bug here as the function where could occur the memory leak
   is not used in dar (!) ).
- updated FAQ
- updated man page information about optional argument's syntax to options
  like -z9 or --zip 9
- avoid calls to textdomain() when --disable-nls is set
- updates doc/NOTES
- fixed potential memory leakage on some system (to a "new[]" was
  corresponding a "delete" in place of a "delete[]" (Wesley's patch))
  In consequences, for API users, note that the following calls
	  - tools_str2charptr
  	  - tools_extract_basename
	  - libdar_str2charptr_noexcept
  all return a char * pointer which area must be released
  by the caller using the delete[] operator
- partially integrated Wesley's api_tutorial patch (added explanations)
- Fixed installation problem of header files, problem reported by
  Juergen Menden
- updated the examples programs for they properly initialize libdar
- the gettext.h file was not installed with libdar headers
- fixed typo error reported by Peter Landgren
- updated api_tutorial with compilation & linking informations
- fixed pedantic warning about some classes inherited from "mask"
  (the parent copy constructor is not called from inherited copy
   constructor; note that the parent class is a pure virtual class)
- added Swedish translation (by Peter Landgren)
- fixed typo in French translation
- added a const_cast statment to avoid compilation warning under some systems
- fixed problem on solaris where the TIME&MIN non canonical parameters
  for terminal are not set by default to 1 and 0 (but to 4 and 0),
  leading keyboard interaction to be impossible when dar needs
  user interaction.
- added O_BINARY to open() mode in dar_cp, without this will cause some problem
  under Cygwin.

from 2.2.0 to 2.2.1
- fixed execution problem for testing programs
- added control code to avoid the "endless loop" warning when -M is used
  and root and archive are not located on the same filesystem
- replaced an internal bug report by a more appropriate exception (elastic.cpp
  line 191)
- fixed bug #31
- fixed bug #32
- fixed bug #33
- changed exception type when dar_manager's -D option does not receive an
  integer
  as argument
- fixed bug #34
- added Wesley Leggette's patch to API tutorial
- fixed inconsistencies concerning Native Language Support in Dar
- added gettext NLS domain switch when incoming and exiting from libdar
- fixed bug #30
- changed the way ctermid() system call is used
- updated FAQ

from 2.1.x to 2.2.0
- caching read/write for catalogue to drop the number of Context Switches.
- added -aSI and -abinary options
- added -Q option
- added -G option
- fixed a display bug about archive size, present when listing with -v option
- added -aa / -ac options
- added -M option
- thread safe support for libdar
- added -g option
- added -am option
- added -acase / -an options
- user_interaction can now be based on customized C++ class
- user_interaction_callback now have a context argument
- added feature: dar_manager now restores directory tree recursively
- added feature: dar_manager can receive a range of archive number with -D
  option
- added summary at the end of configure script
- added -j option (--jog) change behavior when virtual memory is exhausted
- added Native Language Support
- added feature that proposes removal of slices of an older archive of same
  basename
- libz is now optional
- libbz2 is now optional
- added openssh's libcrypto dependency
- added blowfish strong encryption
- changed archive format number (version "04"), difference occures only when
  encryption is used
- moved libdar operations (archive creation, listing, testing ...) as method of
  the C++ archive class
- added thread cancelation routine
- added feature : password can be read out of command-line (interactively at
  execution time).
- added programming documentation (thanks to Doxygen)
- optimize CRC computation for speed
- added warning telling [list of path] is deprecated (better use -g option)
- added Todd Vierling's patch for dar to compile under Interix

from 2.1.5 to 2.1.6
- fixed compilation problem with gcc-3.x for dar64
- updated libtool to generate the configure script
- fixed old info in dar's man page

from 2.1.4 to 2.1.5
- added protection code against bad_alloc exception
- new configure option to bypass libdl test
- removed expected exception list in deci, limitint, real_infinint and storage
  modules to improve global robustness
- remove the #pragma implementation/interface directives which tend today to
  become obsolete, and seems to be the cause of compilation problem on
  (recent) Linux kernel 2.6.7 for example.
- added protection code to report bug conditions
- code simplification for filesystem reading (while performing backup)
- fixed bug #29
- fixed code syntax to support gcc-3.4.x

from 2.1.3 to 2.1.4
- fixed bug #27
- improved limitint detection overflow
- fixed bug #28

from 2.1.2 to 2.1.3
- fixed namespace visibility inconsistency for several call to open()
- added "list:" key in conditionnal syntax, to stay coherent with man page
- optimized dar_cp algorithm for speed in case I/O error
- made dar_cp more talkative about events that succeed while copying data
- fixed bug #25
- fixed bug #26

from 2.1.1 to 2.1.2
- fixed bug #24
- added "-w d" option which is equivalent to -w but necessary when dar
  is not compiled with GNU getopt
- updated documentation about GNU getopt() vs non GNU getopt()
- update configure script to have libgnugetopt auto-detection

from 2.1.0 to 2.1.1
- fixed configure script warning when an include file is "present but cannot
  be compiled"
- fixed bug #21
- fixed bug #22
- dar_xform and dar_slave now send their help usage on stdout (instead of
  stderr)
- fixed typo in error message

from 2.0.x to 2.1.0
- fixed bug #17
- API version 2 documentation
- API version 2 implementation
- -E and -F can now be present several time on command line and/or included
  files (dar, dar_slave and dar_xform)
- context (%c in -E and -F) is now transmitted in the pipes from dar to
  dar_slave
- added -wa option
- added -as option
- added -e option
- updated the API to be able to add new encryption protocol later
- root (-R argument) can now be a symbolic link pointing to a directory
- fixed bug #17bis
- added information returned by the system when error during read() to the
  message returned to the user
- fixed bug #18
- documentation about filter mechanism added
- fixed bug #19
- don't fail for a file if permission could not be restored
- fixed bug #20
- configure script does not mess with CXXFLAGS or CFLAGS execpt when using
  debugging options.

from 2.0.3 to 2.0.4
- updated autoconf version used to generate configure script (2.57 -> 2.59) The
  large file support is back with gcc-3 (was only working with gcc-2)

from 2.0.2 to 2.0.3
- fixed bug #20

from 2.0.1 to 2.0.2
- fixed bug #18
- fixed bug #17bis
- documentation about filter mechanism added
- fixed bug #19

from 2.0.0 to 2.0.1
- fixed bug #17

from version 1.3.0 to 2.0.0
- using configure script (built with automake & autoconf)
- creation of the libdar library
- API for libdar (version 1)
- updating TUTORIAL
- added chapter in NOTES for ssh / netcat use with dar
- added -H option
- making documentation for API : DOC_API
- speed optimization for dar_manager
- enclosed libdar sources in libdar namespace
- added libdar dynamic library support (using libtool)
- fixed bug in ui_printf. Bug appeared with the shell_interaction split from
  user_interaction (for libdar)
- fixed bug in dar_manager when creating empty database
- changed hourshift implementation (no static variable used anymore)
- changed code not to have dynamic allocation to take place before main() was
  called
- added compilation time option to replace infinint by 32 bits or 64 bits
  integers
- added special memory allocation (--enable-special-alloc) to better handle
  many small dynamic objects (in the meaning of OOP).
- fix. Dar_manager does no more send all its output to stderr, just interactive
  messages are sent there.
- changed "dar_manager -u" do not display anymore files present in the archive
  which have not saved data or EA in the asked archive.
- removed displaying of command-line used for backup ("dar -v -l ...") as it
  is no more becoming inaccurate due to include files and as it would consume
  too much space if it has to be developed.
- added sample scripts for using dar with Parchive
- now displaying option read from configuration files when using -v option
- added %e and %c for user script parameters
- using UPX to compress binary if available at compilation time
- removed comments put by mistake in 1.3.0 around warning when try to backup
  the archive itself. This revealed a bug, which made the warning be
  issued in some wrong cases.
- removed this previous warning when creating archive on the stdout
- fixed bug #15
- fixed error in libdar sanity checks, where exceptions were not raised (due
  to the lack of the "throw" keyword)
- fixed bug #16
- changed order of argument passed to dar by dar_manager, for the -x <archive>
  be before any other option (in particular -B options).

from version 1.2.1 to 1.3.0
- added parenthesis for a warning to be able to show, when opening a
  scrambled archive
- fixed bug #10
- added feature : --flat option
- improved slice name detection when given in place of archive basename
- added feature : comments in the configuration file given to -B (see
  man page for more).
- added feature : --mincompr option
- fixed a display error when listing a hard link (the name of the first
  hard link seen on an inode was displayed in place of the name of each hard
  link). This did not concern the tree (-T option) listing.
- added standard config files ~/.darrrc and /etc/darrc config files
- conditional statements in included files (using make-like targets)
- added feature : --noconf option
- fixed a bug : warning message issued when th user asks for dar to backup
  the archive in itself, was not displayed in some cases.
- fixed bug #11
- added total files counter in each archive while listing dar_manager database
- fixed bug #12
- improved slicename versus basename substitution warning and replacement.
- changed internal name generation to avoid using std::sstream class
- bzip2 compression implemented (need libbz2 library at compilation time)
- added the --nodump feature
- fixed bug #13
- configuration file can have DOS or UNIX text formating
- now closing files before asking for the last slice, this allow un-mounting
  filesystem in that case.

from version 1.2.0 to version 1.2.1
- minor change to have backward compatibility with old archive (dar < 1.2.0)
generated on 64 bits OS (have to use OS_BITS=32 in Makefile on 64 bits OS).
- adapted Axel Kohlmeyer's patch for RPMS
- adapted Dietrich Rothe's patch for compression level : -z has an optional
  argument which is compression level to use.
- I and -X now available while listing archive contents (-l)
- based on Brian May's patch, dar with EA_SUPPORT avoids complaining when
  reading a filesystem that do not supports EA.
- based on Brian May's other patch, dar now uses by default the <stdint.h>
  integers.
- dar is now built with dynamic linking, and a special version named
  dar_static which is statically linked is also available
- fixed problem on Windows NT & 2000 (fixed by first change above)

from version 1.1.0 to version 1.2.0
- -P option can now accept wild cards
- changed dar output format when listing archive contents to have something
  more similar to the output of tar. -T is provided to get the previous tree
  listing
- fixed bug #6
- user interaction is now possible even if standard input is used (for pipe)
- fixed bug #7
- added some missing #include files for compilation under Windows using Cygwin
- added feature to display name of user and group (when possible) in place of
  uid and gid while listing archive contents.
- added the possibility to launch command between slices (-E and -F options)
  for dar, dar_xform and dar_slave.
- when saving or comparing a directory tree, DAR goes transparently in
  subdirectory not modifying the last_access date of each directory.
- usage text (displayed by -h option) is now generated from xml file
  thanks to Chris Martin's little software named dar-help
- fixed bug concerning the uninstallation of man pages
- changed the place where man pages and documentation go /usr/share/doc
  usr/share/man
  in place of /usr/doc and /usr/man for the RPM package (conform to Filesystem
  Hierarchy Standard)
- changed the place where documentation goes for /usr/local/doc to
  /usr/local/share/doc by default. (Thanks to Jerome Zago)
  (conform to Filesystem Hierarchy Standard)
- added scrambling features (-J and -K options)
- added selective compression (-Y and -Z options)
- added third state for saved data to keep trace in an extracted catalogue of
  what is saved in the reference archive (this opens the door to the archive
  manager)
- added the ability to read configuration file (-B option, -B like "batch").
- if a slice name is given in place of a base name, dar proposes to change
  to the correct base name (strips the extension number and dots).
- fixed bug #8
- added dar_manager command-line program
- replaced integer types by macro that can be adapted to have correct behavior
  on 64 bits platform (in particular to read archive from other platforms).

from version 1.0.0 to version 1.1.0
- added feature: now ignored directory are not stored at all in the archive
      unless -D option is used, in which case ignored directory are recorded as
      empty directory (as it was in 1.0.x)
- added support for hard links. Generated archive format version is now 02, but
      format 01 can still be read, and use as reference.
- fixed bug #1
- fixed bug #2
- fixed bug #3
- added feature: restore only more recent file than existing one (-r option)
- added feature: support for Extended Attributes (activated at compilation)
- added feature: verbose option (-v) with -l (add archive contents)
- modified behavior: -l option without -v is no more interactive
- added feature: archive integrity test (option -t). CRC have been added in
      the archive (format 02), thus even without compression Dar is able to
      detect errors.
- added feature: comparison with filesystem (difference) (option -d)
- modified behavior: non interactive messages goes to stdout, while those
      asking user, goes to stderr (all goes to stderr if stdout is used for
      producing the archive, or for sending orders do dar_slave.
- added feature: DAR automatically goes in non interactive mode if no terminal
      is found on standard input (for example when run from crontab). In that
      case any question make DAR to abort.
- added feature: catalogue extraction to small file: "isolation" (-C option)
- added feature: archive produced on stdout when using -c or -C with "-" as
      filename
- added feature: -V option summarizes version of the binary
- added feature: additional command "dar_xform" to "re-slice" an archive
- added feature: read archive trough a pair of pipes with the help of dar_slave
- added feature: long option are now available (see man page)
- fixed bug #5
- a lot of speed optimization in algorithm
- changed exit codes to positive values in case of error
- dar returns an new error code when an operation is partially successful
  (some filed missed to be saved / restored / tested / compared).
- replace the use of vform() method by a customized simple implementation
  in the ui_printf() routine, this should now allow compilation with gcc-3
- changed long option that used an underscore character (`_') by a dash ('-')
- added -O option to have a better behavior when used with non root user
- added 'make doc' option in the makefile

from version 1.0.2 to version 1.0.3
- bug #5 fixed

from version 1.0.1 to version 1.0.2
- bug #2 fixed
- bug #3 fixed

from version 1.0.0 to version 1.0.1
- correction of few mistakes that lead the compilation to fail with certain
      C++ compilers
- bug #1 fixed.

