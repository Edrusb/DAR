	dialog.printf(gettext("\n"));
	dialog.printf(gettext("Commands are:\n"));
	dialog.printf(gettext("   -c  creates an archive\n"));
	dialog.printf(gettext("   -x  extracts files from the archive\n"));
	dialog.printf(gettext("   -d  compares the archive with the existing filesystem\n"));
	dialog.printf(gettext("   -t  tests the archive integrity\n"));
	dialog.printf(gettext("   -l  lists the contents of the archive\n"));
	dialog.printf(gettext("   -C  isolates the catalogue from an archive\n"));
	dialog.printf(gettext("\n"));
	dialog.printf(gettext("   -h  displays this help information\n"));
	dialog.printf(gettext("   -V  displays version information\n"));
	dialog.printf(gettext("\n"));
	dialog.printf(gettext("Common options:\n"));
	dialog.printf(gettext("   -v\t\t   verbose output\n"));
	dialog.printf(gettext("   -R <path>\t   filesystem root directory (current dir by default)\n"));
	dialog.printf(gettext("   -X <mask>\t   files to exclude from the operation (none by default)\n"));
	dialog.printf(gettext("   -I <mask>\t   files to include in the operation (all by default)\n"));
	dialog.printf(gettext("   -P <path>\t   subdirectory to exclude from the operation\n"));
	dialog.printf(gettext("   -g <path>\t   subdirectory to include in the operation\n"));
	dialog.printf(gettext("   -n\t\t   don't overwrite files\n"));
	dialog.printf(gettext("   -w\t\t   don't warn before overwriting files\n"));
	dialog.printf(gettext("   -wa\t\t   don't warn before overwriting and removing files\n"));
	dialog.printf(gettext("   -b\t\t   ring the terminal bell when user action is required\n"));
	dialog.printf(gettext("   -O\t\t   do not consider user and group ownership\n"));
	dialog.printf(gettext("   -H [N]\t   ignore shift in dates of an exact number of hours\n"));
	dialog.printf(gettext("   -E <string>\t   command to execute between slices\n"));
	dialog.printf(gettext("   -F <string>\t   save as -E but for the archive of reference\n"));
	dialog.printf(gettext("   -u\t\t   do not save/restore EA of the user namespace.\n"));
	dialog.printf(gettext("   -U\t\t   do not save/restore EA of the root namespace\n"));
	dialog.printf(gettext("   -K <string>\t   use <string> as key to scramble/unscramble\n"));
	dialog.printf(gettext("   -J <string>\t   same as -K but it does concern the archive of reference\n"));
	dialog.printf(gettext("   -# <integer>    encryption block size\n"));
	dialog.printf(gettext("   -* <integer>    same as -# but for archive of reference\n"));
	dialog.printf(gettext("   -B <filename>   read options from given file\n"));
	dialog.printf(gettext("   -N\t\t   do not read ~/.darrc nor /etc/darrc configuration file\n"));
	dialog.printf(gettext("   -e\t\t   dry run, fake execution, nothing is produced\n"));
	dialog.printf(gettext("   -Q\t\t   suppress the initial warning when not launched from a tty\n"));
	dialog.printf(gettext("   -aa\t\t   do not try to preserve atime of file open for reading.\n"));
	dialog.printf(gettext("   -ac\t\t   do not try to preserve ctime (default behavior).\n"));
	dialog.printf(gettext("   -an\t\t   the masks that follow are now case insensitive\n"));
	dialog.printf(gettext("   -acase\t   the masks that follow are now case sensitive\n"));
	dialog.printf(gettext("   [path list]\t   same as -g for each argument of the list\n"));
	dialog.printf(gettext("   -j\t\t   ask user what to do when memory is exhausted\n"));
	dialog.printf(gettext("\n"));
	dialog.printf(gettext("Saving or Isolation options (to use with -c or -C) :\n"));
	dialog.printf(gettext("   -A [path/]<basename> archive to take as reference\n"));
	dialog.printf(gettext("   -z [level]\t   compress data in archive using gzip algorithm\n"));
	dialog.printf(gettext("   -y [level]\t   compress data in archive using bzip2 algorithm.\n"));
	dialog.printf(gettext("   -s <integer>    split the archive in several files of size <integer>\n"));
	dialog.printf(gettext("   -S <integer>    first file size (if different from following ones)\n"));
	dialog.printf(gettext("   -aSI \t   slice size suffixes k, M, T, G, etc. are power of 10\n"));
	dialog.printf(gettext("   -abinary\t   slice size suffixes k, M, T, G, etc. are power of 2\n"));
	dialog.printf(gettext("   -p\t\t   pauses before writing to a new file\n"));
	dialog.printf(gettext("   -D\t\t   excluded directories are stored as empty directories\n"));
	dialog.printf(gettext("   -Z <mask>\t   do not compress the matching filenames\n"));
	dialog.printf(gettext("   -Y <mask>\t   do only compress the matching filenames\n"));
	dialog.printf(gettext("   -m <number>\t   do not compress file smaller than <number>\n"));
	dialog.printf(gettext("   --nodump\t   do not backup, files having the nodump 'd' flag set\n"));
	dialog.printf(gettext("   -G [path/]<basename> Do on-fly catalogue isolation of the resulting archive\n"));
	dialog.printf(gettext("   -M\t\t   stay in the same filesystem while scanning directories\n"));
	dialog.printf(gettext("\n"));
	dialog.printf(gettext("Restoring options (to use with -x) :\n"));
	dialog.printf(gettext("   -k\t\t   do not remove files destroyed since the reference backup\n"));
	dialog.printf(gettext("   -r\t\t   do not restore file older than those on filesystem\n"));
	dialog.printf(gettext("   -f\t\t   do not restore directory structure\n"));
	dialog.printf(gettext("\n"));
	dialog.printf(gettext("Reading options (to use with -x, -d, -t, -l, -C, -c)\n"));
	dialog.printf(gettext("   -i <named pipe> pipe to use instead of std input to read data from dar_slave\n"));
	dialog.printf(gettext("   -o <named pipe> pipe to use instead of std output to orders dar_slave\n"));
	dialog.printf(gettext("\n"));
	dialog.printf(gettext("Listing options (to use with -l):\n"));
	dialog.printf(gettext("   -T\t\t   tree output format\n"));
	dialog.printf(gettext("   -as\t\t   only list files saved in the archive\n"));
	dialog.printf(gettext("\n\n"));
	dialog.printf(gettext("See man page for more details.\n"));
