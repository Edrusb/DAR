.TH DAR 8 "FEB 23, 2002"
.UC 8
.SH NAME
dar \- disk archive
.SH SYNOPSIS
.B dar [-c | -x | -l | -d | -t] [<path>/]<basename> [options] [list of path]
.P
.B dar -h 
.SH DESCRIPTION
.B dar 
is a full featured backup tool, aimed for disks (floppy, CD-R(W), DVD-R(W), zip, jazz, etc.)

.PP
.B dar
can store a backup in several files (call "slices" in the following) of a given size, eventually pausing before starting the next slice. This can allow for example, the burning of the last generated slice on a CD-R, or changing of floppy disk before continuing on the next one. 
Like its grand-brother the great "tar" command, 
.B dar
may also uses compression, at the difference that compression is used inside the archive to be able to have compressed slices of the defined size. But the most important feature of
.B dar 
is its ability to make differential backup. In other words, backups that contain only new files or files that have changed from a backup of reference. 
Moreover with differential backup,
.B dar
also stores files that have been deleted since the backup of reference. Thus, when restoring, first a full backup, then additional differential backups, at each restoration you get the exact state of the filesystem at the time of the backup. And of course, the reference backup may be a full or a differential backup.
.PP
.B dar
is the first backup program I know that can also remove files during restoration ! By the way, in this document, "archive" and "backup" design the same thing, and are used interchangeably.
.PP
At the difference of the 
.B tar
command, 
.B dar
is not suited to directly use tapes. So keep using tar for Tape Archive. Because, even using tar to write a slice on a tape, you will loose all the interest of another feature of 
.B dar
which is its ability to directly access the data of saved file even when compression is used. This way and at the difference of the tar command, dar is able to extract much faster a given file from a backup and to also recover files that follow a data corruption (loosing just the file in which data corruption occurred).
.PP
 This has of course its limitations, in particular when a data corruption occurs in the vital part of the backup : the few first bytes of each slice, and the last part of the archive (the catalogue).
.PP
Slices have a base name given on command line, which is completed by a dot, number, a dot and an extension (dar). On command line you will never have to give the full file name of a slice.
.RS
.TP 20
Let's take an example :

considering the base name "joe", dar will make one or several slices during backup. Theses are files which name is :
joe.1.dar joe.2.dar ... joe.10.dar ... etc.
If you want to extract, list, or use these backup as reference, you will only have to use the base name which here is the string "joe".
.RE

.SH OPTIONS

.PP
COMMANDS :
.RS
.TP 20
-c [<path>/]<basename>
creates a backup with the name based on <basename>. All the slices will be created in the directory <path> if specified, else in the current directory. If the destination filesystem is too narrow to contain all the slices of the backup, the -p option (pausing between slices writing) might be of interest
.TP 20
-x [<path>/]<basename>
extracts files from the given backup. Slices are expected to be in the current directory or in the directory given with <path>. It is also possible to use symbolic links to gather slices that are not in the same directory. Path may also point to a removable device (floppy, CD, etc), in this case, to be able to mount/unmount the device, you must not launch dar from that directory (see tutorial for details).
.TP 20
-l [<path>/]<basename>
lists the content of the given backup. In general
.B dar 
will only require the first and the last slice of the archive.
.TP 20
-t [<path>/]<basename>
checks the backup integrity (NOT YET IMPLEMENTED)
.TP 20
-d [<path>/]<basename>
compares saved files in the backup with those in the filesystem (NOT YET IMPLEMENTED)
.TP 20
-h
displays help usage
.PP
.RE
GENERAL OPTIONS:
.RS
.TP 20
-v 
verbose output
.TP 20
-b 
make the terminal ring when user action is required (like for example the creaction of a new slice using the -p option)
.TP 20
-n
do not allow overwriting of any file of slice
.TP 20
-w
do not warn before overwriting file or slice. By default (no -n and no -w) overwriting is allowed but a warning is issued before proceeding.
.TP 20
-X <mask>
the mask is a string with wild cards (like * and ?) which is applied to filenames (except directories). If a given file matches the mask, it is excluded from the operation (backup or restoration). By default (no -X on the command line), no file is excluded from the operation. -X may be present several times on the command line.
.TP 20
-I <mask>
the mask is applied to filenames (except directories). If a given file matches the mask and does not match any mask given with -X, the file is elected for the operation. By default (no -I and no -X on the command line), all files are included for the operation. -I may be present several times on the command line.
.TP 20
-R <path>
the path points to the directory tree containing all the files that will be enrolled in the operation (backup or restoration). By default the current directory is used. All other paths used in -P option or in the [list of path] on the command line are and must be relative to this path (or to current directory if -R is not present).
.TP 20
-P <path>
do not consider file or directory sub-tree designed by the path. -P may be present several time on the command line. By default no sub-tree of file is excluded from the operation, and all the directory tree as indicated by -R is considered.
.TP 20
[list of path]
files or directory to only take in account, as opposed to -P. By default all files under the -R directory are considered. Else, if one or more file is given, just those are elected (for backup or restoration) and if they do not match a -P option. All path given this way must be relative to the -R directory. 
.PP
.RE
SAVING OPTIONS (to use with -c)
.RS
.PP
.TP 20
-z
compress within slices using gzip algorithm (by default, no compression is performed).
.TP 20
-y 
compress using bzip2 algorithm (NOT IMPLEMENTED)
.TP 20
-s <number>
Size of the slices in byte. if the number is followed by K or k, M, G, T or P the size is in kilobyte, megabyte, gigabyte, terabyte or petabyte respectively. Examples : "20M" means 20 megabytes, while "20" means 20 bytes. If -s is not present the backup will stay in one slice whatever the size of the backup is (there is probably some filesystem limitations, you can thus expect some problems over 4 gigabytes depending on your filesystem).
.TP 20
-S <number>
-S gives the size of the first slice which may be chosen independently of the size of following slices. This option needs -s and by default, the size of the first slice is the same as the one of the following slices.
.TP 20
-p 
pauses before writing to a new slice (this requires -s) By default there is no pause, all slices are output in the same directory, up to the end of the backup or to the filesystem fulfillment. In this later case, the user is advised of the lack of disk space and the application stops for user action. As soon as some disk space is available, the user can continue the backup.
.TP 20
-A [<path>]/<basebame>
specifies the archive to use as reference. By default no archive is used and all files are saved (in regards to -I -X -P and the list of path). All slices of the reference backup are expected to be on the same directory given by <path> or the current directory by default. Usually only the first and the last slice are required to extract the catalogue of reference and the use of symbolic links is also possible here to gather slices that do not reside in the same directory. You can also point <path> to a floppy or any other mounted directory, 
.B dar
will pause and ask the user for required slices if they are not present.
.PP
.PP
.RE
RESTORATION OPTIONS (to use with -x)
.RS
.TP 20
-k
do not delete files that have been deleted since the backup of reference (file overwriting can still occur). By default, files that have been destroyed since the backup of reference are deleted during restoration, but a warning is issued before proceeding, except if -w is used. If -n is used, no file will be deleted (nor overwritten), thus -k is useless when using -n.
.RE
.PP
.SH BUGS
No one known at this time ; feedback is welcome. 

.SH AUTHOR
.nf
http://dar.linux.free.fr/
Denis Corbin (dar.linux@free.fr)
France
Europe

