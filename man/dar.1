.TH DAR 1 "JAN 11, 2003"
.UC 8
.SH NAME
dar \- disk archive
.SH SYNOPSIS
.B dar [-c | -x | -l | -d | -t | -C] [<path>/]<basename> [options] [list of paths]
.P
.B dar -h
.P
.B dar -V 
.SH DESCRIPTION
.B dar 
is a full featured backup tool, aimed for disks (floppy, CD-R(W), DVD-R(W), zip, jazz, etc.)

.PP
.B dar
can store a backup in several files (called "slices" in the following) of a given size, eventually pausing before starting the next slice. This can allow for example, the burning of the last generated slice on a CD-R, or changing a floppy disk before continuing on the next one. 
Like its grand-brother, the great "tar" command, 
.B dar
may also use compression, at the difference that compression is used inside the archive to be able to have compressed slices of the defined size. But the most important feature of
.B dar 
is its ability to make differential backups. In other words, backups that contain only new files or files that have changed from a backup of reference. 
Moreover with differential backup,
.B dar
also stores files that have been deleted since the backup of reference. Thus, when restoring, first a full backup, then additional differential backups, at each restoration you get the exact state of the filesystem at the time of the backup. And of course, the reference backup may be a full or a differential backup itself.
.PP
.B dar
is the first backup program I know that can also remove files during restoration! By the way, in this document, "archive" and "backup" design the same thing, and are used interchangeably.
.PP
At the difference of the 
.B tar
command, 
.B dar
is not suited to directly use tapes. So keep using tar for tape archives. Because, even using tar to write a slice on a tape, you will loose all the interest of another feature of 
.B dar
which is its ability to directly access the data of saved file even when compression is used. This way and in contrast to the tar command, dar is able to extract a given file much faster from a backup and to also recover files that follow a data corruption (loosing just the file in which data corruption occurred).
.PP
 This has of course its limitations, in particular when a data corruption occurs in the vital part of the backup, i.e. the few first bytes of each slice, and the last part of the archive (the catalogue).
.PP
Slices have a base name given on the command line, which is completed by a dot, a number, a dot and the extension (dar) to form a filename. On command line you will never have to give the full file name of a slice.
.RS
.TP 20
Let's take an example :

considering the base name "joe", dar will make one or several slices during backup. Theses are files with the names joe.1.dar joe.2.dar ... joe.10.dar ... etc.
If you want to extract, list, or use these backup as reference, you will only have to use the base name which is the string "joe" here.
.RE

.SH OPTIONS

.PP
COMMANDS :
.RS
.TP 20
-c, --create [<path>/]<basename> 
creates a backup with the name based on <basename>. All the slices will be created in the directory <path> if specified, else in the current directory. If the destination filesystem is too small to contain all the slices of the backup, the -p option (pausing before starting new slices) might be of interest. Else, in the case the filesystem is full, dar will suspend the operation, asking for the user to make free space, then continue its operation. To make free space, the only thing you cannot do is to touch the slice being written. If the filename is "-" *and* no slice is asked for (no -s) the archive is produced on the standard output.
.TP 20
-x, --extract [<path>/]<basename>
extracts files from the given backup. Slices are expected to be in the current directory or in the directory given by <path>. It is also possible to use symbolic links to gather slices that are not in the same directory. Path may also point to a removable device (floppy, CD, etc.), in this case, to be able to mount/unmount the device, you must not launch dar from that directory. In other words, the current directory must not be that directory (see tutorial for details).
.TP 20
-l, --list [<path>/]<basename>
lists the contents of the given backup. In general
.B dar 
will only require the first and the last slice of the archive.
.TP 20
-t, --test [<path>/]<basename>
checks the backup integrity. Even without compression, dar is able to detect at least one error by data file, thanks to a 16 bits CRC recorded in the catalogue. If one error occurred in file's data stored the archive, dar will report it in 100% of all cases. If two error occurred, dar will see them in 93,8% of all cases. If three error occurred, dar will see them in 100% of all cases. If four errors occurred, dar will see them in 90.6% of all cases, etc. 
.TP 20
-d, --diff [<path>/]<basename>
compares saved files in the backup with those in the filesystem.
.TP 20
-C, --isolate [<path>/]<basename>
isolate a catalogue from its archive. The argument is the basename of the file that will contain the catalogue. The -A option is mandatory here to give the name of the archive to extract the catalogue from. Slicing is available (-s -S -p -b etc.). If the filename is "-" *and* no slice is asked (no -s) the catalogue is produced on the standard output, allowing to send the resulting catalogue through a pipe. Note that there is no difference in concept between a catalogue and an archive. Thus you can do all operation on a catalogue, in particular take it as reference for a differential archive. A catalogue produced with -C is just like a differential archive done right after a full backup, (no data in it).
.TP 20
-h, --help
displays help usage.
.TP 20
-V, --version
displays version information.
.PP
.RE
GENERAL OPTIONS:
.RS
.TP 20
-v, --verbose
verbose output
.TP 20
-b, --beep
makes the terminal ring when user action is required (like for example the creation of a new slice using the -p option)
.TP 20
-n, --no-overwrite
do not allow overwriting of any file of slice.
.TP 20
-w, --no-warn
Do not warn before overwriting file or slice. By default (no -n and no -w) overwriting is allowed but a warning is issued before proceeding.
.TP 20
-X, --exclude <mask>
The mask is a string with wild cards (like * and ?) which is applied to filenames which are not directories. If a given file matches the mask, it is excluded from the operation. By default (no -X on the command line), no file is excluded from the operation. -X may be present several times on the command line, in that case a file will not be considered for the given operation if it matches at least one -Z mask.
.TP 20
-I, --include <mask>
The mask is applied to filenames which are not directories. If a given file matches the mask and does not match any mask given with -X, the file is selected for the operation. By default (no -I and no -X on the command line), all files are included for the operation. -I may be present several times on the command line, in that case all file that match one of the -I mask will be considered for the given operation, if they do not also match one of the -X mask. 
.TP 20
-R, --fs-root <path>
The path points to the directory tree containing all the files that will be enrolled in the operation (backup or restoration). By default the current directory is used. All other paths used in -P option or in the [list of paths] on the command line are and must be relative to this path (or to current directory if -R is not present).
.TP 20
-P, --prune <path>
Do not consider file or directory sub-tree given by the path. -P may be present several time on the command line. By default no sub-tree of file is excluded from the operation, and all the directory tree as indicated by -R is considered.
.TP 20
[list of paths]
files or directory to only take in account, as opposed to -P. By default all files under the -R directory are considered. Else, if one or more file are given, just those are selected (if they do not match any -P option). All paths given this way must be relative to the -R directory. 
.TP 20
-u, --no-user-EA
Do not consider the Extended Attributes (EA) of the user namespace. By default, they are saved and restored, if the support for EA has been activated at compilation time. If not, this option is forced internally (you need not specify it).
.TP 20
-U, --no-system-EA
Do not consider the EA of the root (or system) namespace. By default, they are saved and restored, if the support for EA has been activated at compilation time. If not, this option is forced internally (you need not specify it).
.P
Note concerning Extended Attributes (EA): support for EA must be activated at compilation time, if your system supports it. Thus you can get two binaries of dar (of the same version), one supporting EA and another which does not (dar -V to see whether EA support is activated). The archives they produce are the same and can be read by each other. The only difference is that the binary without EA support is not able to save or restore EAs, but is still able to test them and list their presence.
.TP 20
-i, --input <path>
is available when reading from pipe (basename is "-" for -x, -l, -t, -d or for -A when -c or -C is used). When reading from pipe, standard input is used, but with this option, the file <path> (usually a named pipe) is used instead.  This option is to receive output from dar_slave program.
.TP 20
-o, --output <path>
iq available when reading from pipe (basename is "-" for -x, -l, -t, -d or for -A when -c or -C is used). When reading from pipe, standard output is used to send request to dar_slave, but with this option, the file <path> (usually a named pipe) is used instead. When standard output is used, all messages goes to standard error (not only interactive messages). 
.TP 20 
-O, --ignore-owner
Do not consider user ID (uid) or group ID (gid), when comparing with archive of reference (-c -A) while doing a differential backup, when extracting (-x) or when comparing (-d). This is useful when dar is used by a non-priviledged user. It will not consider a file has changed just because it has only the uid or gid changed, nor report a comparison mismatch if only
uid or gid is different.
.TP 20
-E, --execute <string>
the string is a
.B user command-line
to be launched between slices. For reading (thus using -t, -d, -l or -x options), the command is executed before the slice is read or even asked, for writing, (thus using -c or -C option), the command is executed once the slice has been completed. Some substitution string can be used in the string:
.RS
.TP 10 
%%
will be replaced by %
.TP 10
%p
will be replaced by the slice path
.TP 10
%b
will be replaced by the slice basename
.TP 10
%n
will be replaced by the slice number (to be read or just written). For reading, dar often needs the last slice, but initially it does not know its number. If it cannot be found in the current directory, the user command-line is then called with %n equal to 0 askin the user (via the user command-line to provide the last slice). If after it is still not present, dar asks the user (as usually) with a message on the terminal. Once the last slice is found, the user command-line is called a second time, with %n equal to the value of the last slice number.
.RE
.TP 20
-F, --execute-ref <string>
same as -E but is applied between slices of the reference archive (-A option).
.TP 20
-K, --key <string>
scramble or unscramble the archive using <string> as pass phrase. A scrambled archive can only be read if the same pass phrase is given. OK, that's a very weak scheme, I don't even speak about encryption. So why this feature ? Because I needed it. Without any tool, it is really difficult for a human to crack the scramble (if the key is long enough and is not the repetition of a shorter sequence. For not very important data you it might be useful to avoid unexperimented people to have a look at you data.

.TP 20
-J, --key-ref <string>
same as -K but the given key is used to unscramble the archive of reference (given with -A option).
.TP 20
-B, --batch <filename>
You can put in the file any option or argument as used on command line, that will be parsed as if they were in place of the "-B <filename>" option. This way you can overcome the command line size limitation. Commands in the file may be disposed on several lines, and -B option can also be used inside files, leading a file to include other files. But an error occures in case of loop (a file includes itself) and DAR aborts immediately. Comments are now allowed, and must start by a hash `#' character on each line. Note that for a line to be considered as comment the hash caracter must be the first character of the line (space or tab can still preceed the hash). See
.B Conditional Syntax
bellow for a more rich syntax in configuration files.
.TP 20
-N, --noconf
Do not try to read neither ~/.darrc nor /etc/darrc configuration files. See
.B files
section bellow.

.PP
.RE
SAVING AND ISOLATION OPTIONS (to use with -c or -C)
.RS
.PP
.TP 20
-z, --gzip[level]
compresses within slices using gzip algorithm (if not specified, no compression is performed). The compression level (an integer from 0 to 9) is optional. -z is equivalent to -z9 which is max compression/slow processing. At the oposit, 0 is equivalent to no compression, which is also the case when no -z and no -y is given on the command line.
.TP 20
-y, --bzip2[level]
compresses using bzip2 algorithm. See -z above for usage details.
.TP 20
-s, --slice <number>
Size of the slices in bytes. If the number is appended by k (or K), M, G, T, P E, Z or Y the size is in kilobytes, megabytes, gigabytes, terabytes, petabytes, exabytes, zettabytes or yottabytes respectively. Example: "20M" means 20 megabytes it is the same as giving 20971520 as argument. If -s is not present the backup will be written to a single slice whatever the size of the backup may be (there is probably some filesystem limitation, thus you might expect problems for file size over 2 gigabytes, depending on your filesystem, but this is not a limitation of dar).
.TP 20
-S, --first-slice <number>
-S gives the size of the first slice which may be chosen independently of the size of following slices. This option needs -s and by default, the size of the first slice is the same as the one of the following slices.
.TP 20
-p, --pause 
pauses before writing to a new slice (this requires -s). By default there is no pause, all slices are written in the same directory, up to the end of the backup or until the filesystem is full. In this later case, the user is informed of the lack of disk space and dar stops for user action. As soon as some disk space is available, the user can continue the backup.
.TP 20
-A, --ref [<path>]/<basebame>
specifies the archive to use as reference (mandatory with -C). By default no archive is used and all files are saved (in regards to -I -X -P and the "list of paths"). All slices of the reference backup are expected to be on the same directory given by <path> or the current directory by default. Usually only the first and the last slice are required to extract the catalogue of reference and the use of symbolic links is also possible here to gather slices that do not reside in the same directory. You can also point <path> to a floppy or any other mounted directory, because
.B dar
will pause and ask the user for required slices if they are not present.
.TP 20
-D, --empty-dir
When excluding directories either explicitly using -P option, or implicitly giving a [list of paths], 
.B dar
does not store anything about theses. But with -D option, dar stores them as empty directories. This can be useful, if excluding a mount point (like /proc or /dev/pts). At restoration time, dar will then recreate theses directories (if necessary). This option has no meaning with -C and is ignored in that case.
.TP 20
-Z, --exclude-compression <mask>
Filenames covered by this mask are not compressed. It is only useful with -z or -y. By default, all file are compressed (if compression is used). This option can be used several times, in that case a file that matches one of the -Z mask will not be compressed.
.TP 20
-Y, --include-compression <mask>
Filenames covered by this mask (and not covered by -Z) are the only to be compressed. It is only available with -z no -y. By default all files are compressed. This option can be used several times, in that case all files that match one of the -Y will be compressed, if they do not also match on of the -Z masks.
.TP 20
-m, --mincompr <number>
files which size is below this value will not be compressed. If -m is not specified it is equivalent to giving 
.B -m 100 
as argument. If you want to compress all file whatever their size is you thus need to type 
.B -m 0
on the command line. The same number extensions as those used with -s or -S are available here, if you want to specify the size in kilobyte, megabyte, gigabyte etc.
.TP 20 
--nodump
do not save files which have the 'd' flag set (see chattr(1) lsattr(1) ext2 commands). This option is available only if the dar binary has been compiled with the USE_NODUMP_FEATURE macro uncommented in the Makefile.
.PP
.PP
.RE
RESTORATION OPTIONS (to use with -x)
.RS
.TP 20
-k, --no-deleted
Do not delete files that have been deleted since the backup of reference (file overwriting can still occur). By default, files that have been destroyed since the backup of reference are deleted during restoration, but a warning is issued before proceeding, except if -w is used. If -n is used, no file will be deleted (nor overwritten), thus -k is useless when using -n.
.TP 20
-r, --recent
restore only files that are absent or more recent than those present in filesystem. -r is useless if -n is present.
.TP 20
-f, --flat
do not restore directory structure. All file will be restored in the directory given to -R, if two files of the same name have to be restored, the usual scheme for warning (-w option) and overwriting (-n option) is used. No rename scheme is planned atually. When this option is set, dar does not remove files that have been stored as deleted since last backup. (-f implicitly implies -k).
.RE
.PP
.RE
TESTING AND DIFFERENCE OPTIONS (to use with -t or -d)
.RS
.PP
No specific option, but all general options are available except -n and -w which are useless, as testing and comparing only read data.
.PP
.RE
LISTING OPTIONS (to use with -l)
.RS
.PP
.TP 20
 -T, --tar-format
can be used to have a listing that displays the tree structure.
.TP 20
-I and -X
can be used to filter file to list base on their name. With -T the tree structure is not filtered unlike without -T. Note that -P and [list of path] is not available while listing.
.P
Else only -v and -b from general options are useful. Note that -v displays an archive summary first, where a lot of information about the archive can be obtained.
.TP 10
displayed 
fields
.RS
.TP 10
[data]
possible values are [     ] or [Saved] or [InRef] . [     ] means that the data has not been saved because there is no change since backup of reference. [Saved] means that the data has been saved, and thus this archive is able to restore the file. [InRef] is used when isolating a catalogue from an archive, and means the file was saved in the reference archive.
.TP 10
[EA]
possible values are " " (empty string) or [Saved] or [     ]. It Shows if Extended Attributes are present and saved ([Saved]), are present but not saved ([     ]) which means there is no change since backup of reference, or if there is no EA saved for this file (empty string).
.TP 10
[compr]
possible values are [....%] or [-----] or [     ] or [worse]. Shows if the file has been compressed and the compression rate reached ([...%]), or if the file is stored without compression ([    ] see -Y and -Z options) or if the file is not subject to compression because it is not a saved regular file ([----]), or if the file takes more space compressed than its original size ([worse]), due to compression overhead.
.TP 10
permission
see ls man page
.TP 10
user
owner of the file
.TP 10
group
group owner of the file
.TP 10
size
size in byte of the file (if compression is enabled, the real size in the archive is "compression rate" time smaller).
.TP 10
date
the last modification date of the file. The last access time is also saved and restored, but not displayed.
.TP 10
filename
The name of the file.
.RE

.SH EXIT CODES
.B dar
exits with the following code:
.TP 10
0
Operation successful.
.TP 10
1
Syntax error on command-line.
.TP 10
2
Error due to a hardware problem or a lack of memory.
.TP 10
3
Detection of a condition that should never happen, and which is considered as a bug of the application.
.TP 10
4
Code issued when the user has aborted the program upon dar question from dar. This also happens when dar is not run from a terminal (for example launched from crontab) and dar has a question to the user. In that case, dar aborts the same way as if the user pressed the escape key at the question prompt.
.TP 10
5
is returned when an error concerning the treated data has been detected. While saving, this is the case when a file could not be opened or read. While restoring, it is the case when a file could not be created or replaced. While comparing, it is the case when a file in the archive does not match the one in the filesystem. While testing, it is the case when a file is corrupted in the archive.
.TP 10
6
an error occured while executing user command (given with -E or -F option). Mainly because the creation of a new process is not possible (process table is full) or the user command returned an error code (exit status different of zero).

.SH FILES
.B $HOME/.darrc
and
.B /etc/darrc
if present are read for configuration option. They share the same syntax as file given to -B option. If $HOME/.darrc is not present and only in that case, /etc/darrc is consulted. You can still launch /etc/darrc from .darrc using a statment like 
.B -B /etc/darrc.
None of theses file need to be present, but if they are they are parsed AFTER any option on the command line and AFTER included files from the command line (files given to the -B option). NOTE: if $HOME is not defined $HOME/.darrc default to /.darrc (at the root of the filesystem).

Else you can see 
.B conditional syntax
bellow, and -N option above that leads dar to ignore the /etc/darrc and $HOME/.darrc files.

.SH CONDITIONAL SYNTAX
configuration files (-B option, $HOME/.darrc and /etc/darrc) usually contain a simple list of command-line arguments, split or not over several lines, and eventually mixed with comments (see -B option for more). But, you can also use make-like targets to ask for a particular set of commands to be used in certain conditions. 

A condition takes the form of reserved word immediately followed by a colon ':'. This word + colon must stand alone on its line, eventually with spaces or tabs beside it. The available conditions are:
.TP 20
extract:
all option listed after this condition get used if previously on command line or file the -x option has been used
.TP 20
create:
all option listed after this condition get used if previously on command line or file (-B option) the -c option has been used
.TP 20
list:
if -l option has been used
.TP 20
test:
if -t option has been used
.TP 20
diff:
if -d option has been used
.TP 20
isolate:
if -C option has been used
.TP 20
all:
in any case
.TP 20
default:
if no -c, -d, -x, -t, -C or -l has been used at this point of the parsing.
.P
The condition stops when the next condition starts, or at End of File. The commands inserted before any condition are equivalent to those inserted after the "all:" condition. Remark : -c -d -x -t -C and -l are mutual exclusive, only one of them can be used while calling dar.
.P 
Here is an example of conditional syntax
.RS
.P
create:
  # upon creation exclude the
.br
  # following files from compression
.br
-Z "*.mp3" -Z "*.mpg"
.P
all:
.br
-b
.br
-p
.P
default:
.br
# this will get read if not
.br
# command has been set yet
.br
-V 
.br
# thus by default dar shows its version
.P
all:
.br
-v
.br
# for any command we also ask to be verbose
.br
# this is added to the previous all: condition
.RE 
.P
Last point, you may have several time the same condition (several
.B all:
) for example. They will be concatenated together.

.SH SEE ALSO
dar_xform(1), dar_slave(1), dar_manager(1)

.SH KNOWN BUGS
dar cannot restore time of symbolic links. Many (all ?) UNIX do not provide any way to do that, the utime() system call changes the file pointed to by the link rather than the date of the link itself.
.P
dar saves and restores atime and mtime, but cannot restore ctime (last inode change), there does not seems to be a standard call to do that under UNIX.

.SH AUTHOR
.nf
http://dar.linux.free.fr/
Denis Corbin (dar.linux@free.fr)
France
Europe
