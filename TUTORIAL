TUTORIAL 
================
This little tutorial, shows you how to backup your LINUX file system 
(partially or totally) on ZIP drives.

STEP 1: the FULL backup
------------------------

we need first to make a full backup, let's go:

the size of a zip drive is 100MB, 
*** here comes the option: -s 100M
this tells dar to not create a single backup file but to split it in several
files of at most 100 Megabytes of size

but on your first zip drive you want to copy the dar binary outside the
backup to be able to restore in case of hard disk failure for example. 
This make the free space on the first zip floppy a bit smaller: 98MB. 
*** Here comes the option: -S 98M  
(note that '-s' is lowercase for all the slices, and '-S' is UPPERCASE meaning 
for only the initial slice).

we need to pause between slices to change the zip floppy when it is full
*** here comes the option: -p -b
telling dar to pause before writing a new slice (-p) and to ring the terminal
bell (-b) 

we will compress data inside the backup
*** here comes the option: -z

now, we want to backup the whole file system.
*** here comes the option: -R /
this tells dar that no files out of this directory tree will be saved (here, it
means that no files will be excluded from the backup, if no filter is 
specified, see below)

there are some files you don't want to backup like backup files generated by
emacs "*~" and .*~".
*** here comes the options: -X "*~" -X ".*~" 
note that you have to quote the mask for it not to be interpreted by the shell
 
over theses files, there is several sub-trees you must not save: the proc 
file system for example, as well as the /dev/pts . Theses are virtual 
file systems, saving them would only make your backup bigger filled with 
not useful stuff.
*** here come the options: -P dev/pts -P proc
Note that path must be relative to -R option

moreover we must not save the backup itself:
*** here comes the option: -P mnt/zip
assuming that your zip is mounted under /mnt/zip
you should also have excluded all files of extension "dar" which are
backup generated by dar with -X "*.dar"

last we ask to give a name to this full backup. Let's call it "linux_full"
as it is supposed to take place on the zip drive, its path is 
/mnt/zip/linux_full
*** here comes the option: -c /mnt/zip/linux_full
note that linux_full is not a complete filename, it is a "base name", on 
which dar will add a number and an extension ".dar", this way the first
slice will be a file of filename linux_full.1.dar located in /mnt/zip

now, as we will have to mount and umount the /mnt/zip file system, we must
not have any process using it, in particular, dar current directory must no
be /mnt/zip so we change to / 
all together it makes:

put an empty zip floppy in the device, and mount it 
	mount /mnt/zip 
according to your /etc/fstab file.
copy the dar binary to the zip drive (to be able to restore in case of big 
problem, like a crash disk)
	cp `which dar` /mnt/zip
then, type the following
	cd /
	dar -c /mnt/zip/linux_full -s 100M -S98M -p -b -z -R / -X "*~" -X ".*~" -P dev/pts -P proc -P mnt/zip

when the first slice will be done dar, will pause, ring and display a message.
you will have to unmount the floppy
	umount /mnt/zip
eject and replace the floppy by an empty new one and mount it
	mount /mnt/zip
then proceed with dar pressing the <enter> key.

dar will label slices this way:
slice 1: linux_full.1.dar
slice 2: linux_full.2.dar
and so on.

That's it we finished the first step, it may take a long time depending on the
size of the data to backup, but, for the following step (differential backup)
it can be often it will stay fast every time.

Just a little check on the archive you've just made:
suppose you want to read the content of the backup you made, you would have 
to run:

dar -l /mnt/zip/linux_full

STEP 2: DIFFERENTIAL BACKUP
-------------------------------
The only thing to add is the base name of the backup we take as reference
*** here comes the option: -A /mnt/zip/linux_full

of course, we have to choose another name for that backup, let's call it
linux_diff1 
*** here comes the option: -c /mnt/zip/linux_diff1

last point, if you want to put the new backup at the end of the full backup,
you will have to change the -S option according to the remaining space on it.
suppose the last slice of linux_full takes 34MB you have 76MB available for the
first slice (and always 100MB for the following ones),
*** here comes the option: -S 76M
but if you want to put the backup on a new floppy, just forget the -S option.

all together it makes:
	dar -c /mnt/zip/linux_diff1 -A /mnt/zip/linux_full -s 100M -S 76M -p -b -z -R / -X "*~" -X ".*~" -P dev/pts -P proc -P mnt/zip

the same way we have done previously, just before effectively starting to 
backup, dar will ask or the first and then the last slice of the archive of
reference, then dar will pause for you to change the floppy and put the one
you want to put the backup on.

STEP 3: ENDLESS DIFFERENTIAL BACKUP
------------------------------------
you can make another differential backup, taking linux_diff1 as reference,
in this case you would change only the following
-c /mnt/zip/linux_diff2 -A /mnt/zip/linux_diff1
you could also decide to change of device, taking a 1'44MB floppy or a CD-R,
this would not cause any problem at all. It arrives a time when you get
many differential backup for a single full backup, it is then time
to make a new full backup, depending on your available time for doing it, or
on your patient if one day you have to recover the whole data after a disk
crash: you would then have to restore the full backup, the all the following
differential backup up to the most recent one. This requires more user 
intervention than restoring a single full backup, all is a matter of balance,
between the time it takes to backup and the time it takes to restore. 

Another solution, is when you have too much differential backup, is to make 
then make next differential backup taking the full_backup as reference. 
This way, it will take less time than doing a full backup, and you will not
have to restore all intermediate differential backup, upon disk failure. 

Of course, a given backup can be used as reference for several differential
backup, there is no limitation in number nor in nature (the reference can 
be a full of differential backup).


STEP 4: RECOVER AFTER A DISK CRASH
------------------------------------
Sorry, it arrived, your old disk has crashed. Ok, you are happy because, you
have now a good argument to buy the very fast and very enormous very last
hard disk available. Usually, you also cry because you have lost data and you
will have to reinstall all you system, that was working for so long !

But if the last backup you made is recent, then keep smiling !
OK, you have installed your new hard disk and configured you BIOS to it (if 
necessary).
You will need a bootable floppy, with a minimum Linux system on it, that
allows you to access your zip drive and you new empty hard disk 
(in the case your backup resided on zip disk). I recommend the Slackware 
floppy disks, they are nicely done. You don't need to install any thing on 
your brand-new disk, just make partitions and format as you want:
We suppose your new disk is /dev/hda and /dev/sga is your zip drive.

1. create the partition table as you wish, using
	fdisk /dev/hda

2. format the ext2 partition which will receive your data
	mke2fs /dev/hda1

3. additionally format the swap partition (if need)
	mkswap -c /dev/hda2

4. now we must mount the hard disk, somewhere.
	cd /
	mkdir disk
	mount -t ext2 /dev/hda1 /disk
would do the trick

5. we need to copy the dar binary from the zip to your disk
insert the floppy zip where you have copied the dar binary
	cd /
	mkdir zip
	mount -t ext2 /dev/sga /zip
	cp /zip/dar /disk
where /dev/sga points to your zip drive	

6. now we restore the archive.
the stuff has to go in /disk subdirectory
*** here comes the option: -R /disk

let's go restoring !
	/disk/dar -x /zip/linux_full -R /disk

and when the next zip floppy is needed, 
	umount /zip
change the floppy
	mount -t ext2 /dev/sga /zip
then press <enter> to proceed with dar
you can type theses last command either using another virtual console 
(pressing ALT-F1, etc. under Linux), or suspending dar with Control-Z. 
You will have then to reactive it with the "fg" command once the floppy 
is changed.

7. Once finished with the restoration of linux_full, we have to do the same 
with any following backup, but, this way, dar will warn you any time it 
restores a more recent file or any time a file that has been removed since
the backup of reference has to be removed from file system. If you don't want
to press the <enter> key several thousand times,
*** here comes the option: -w
(don't warn)

all together it makes:
	/disk/dar -x /zip/linux_diff1 -R /disk -w

then any additional archive:
	/disk/dar -x /zip/linux_diff2 -R /disk -w
	...
	/disk/dar -x /zip/linux...    -R /disk -w

8. Finally, remove the dar binary from the disk:
	rm /disk/dar

9. and launch lilo for your Linux box to boot properly:
	lilo -r /disk

10. you can reboot you machine and be happy with you brand-new hard disk with your data on it:
	shutdown -r now

OK, one day, I will make something like a bootable floppy image with dar 
inside, maybe with a simple script for user interaction... if you have already 
done it, you can forward it to me to be published on the dar web site.


