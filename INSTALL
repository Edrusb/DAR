
REQUIREMENTS (only if you plan to compile from a source package)
============
You need a c++ compiler (source tested with gcc-2.91.66 and gcc-2.95.3)
and zlib must be installed (at least version 1.1.3, but 1.1.4 is recommended).


INSTALLATION 
============

1. First edit the Makefile to suite your needs 
      * change INSTALL_ROOT_DIR 
	if you don't want to install dar binary in /usr/local/bin
	man pages in /usr/local/man
	and documentations in /usr/local/doc/dar-<version>
      * uncomment EA_SUPPORT if your platform supports extended attributes
      * uncomment FILEOFFSET if you need support for large files

2. If you have a source package and you want to compile it:

	make

3. As root install it with
	
	make install

(This will install the dar suite binaries as well as their manual page).

4. and if you want it installed
	
	make install-doc

(This will install TUTORIAL, README, NOTES, etc.)

Optionally:
-----------

To uninstall: (also uninstalls doc if was installed)

	make uninstall

To clean the package source tree after compilation:
	
	make clean

If you want to debug or to play with the factoriel program (which is a 
little software used for testing the infini-integer used in dar),  

	make factoriel

To use factoriel:

	./factoriel 100

	The argument is a decimal number as huge as you want, all 
	depends on the time want to spend to compute the decimal 
	representation of the factorial ( "n!" in math).

If you have planed to debug, you can build the several test programs 
aimed to quite each module. They are to be used with a debugger for 
step by step execution, not as fail/pass tests.

	make test


have fun !




