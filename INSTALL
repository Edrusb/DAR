

                          I N S T A L L A T I O N

                          I N S T R U C T I O N S


        SUMMARY
        =======

                 I   _ installation from RPM binary package
                 II  _ installation from sources
                 III _ installation from binary package for windows


        I _ INSTALLATION FROM RPM
        ==========================

For RPM packages, install as any other package (see rpm man page and
relative documentation). In a more general way, the binary packages
provided on dar's web site are just for convenience. For a specific
package type of a given distro, ask the corresponding disto maintainer
team.


        II _ INSTALLATION FROM SOURCES (Any Unix including Cygwin)
        ==============================

        MANDATORY

You need to have installed:
- a C++ compiler (only gcc-3 is supported but other may work too)
- make

        NOT MANDATORY
- optionaly zlib can be installed to have gzip compression support
  (at least version 1.1.3, but 1.1.4 is recommended),
  see http://www.gzip.org/zlib/ for source code,
- as well as libbzip2 to have bzip2 compression support.
  (tested with version 1.0.2, more recent should also work)
  see http://sources.redhat.com/bzip2/ for source code.
- GNU getopt is strongly recommended for system that do not have it by default
  (like FreeBSD), else you won't have long options nor optional arguments,
  If you are using Linux or Cygwin/Linux you do not need to have GNU getopt.
- last if you want strong encryption, openssl's crypto library is necessary.
  openssl homepage: http://www.openssl.org/
- if doxygen is available on your system, "make" will build the API reference
  manual, which will be located in doc/html/index.html
  doxygen homepage: http://www.stack.nl/~dimitri/doxygen/index.html
- if upx is available on your system, "make install-strip" will compress the
  dar binaries using upx. (http://upx.sourceforge.net/)


Important: due to a bug in the autoconf/libtool softwares used to
build the configure script you must not have spaces in the name of the path
used to build dar. You can install dar binary anywhere you want, the problem
does not concern dar itslef, it concerns the ./configure script used to build
dar: To work properly it must not be ran from a path which has a space in it.
This problem is under investigation (bug 1117188 on sourceforge).


1. configure the package using the configuration script:

        ./configure

OR for a faster executable (see doc/LIMITATIONS for drawbacks):

	./configure --enable-mode=64

check the ./doc/configure_options file document for a list of other available
options (or type ./configure --help)



2. then you need to compile:

        make

IMPORTANT. if you get compilation error at this step, try setting CXXFLAGS
to -O (the letter O not zero) and return to step 1 (configure):

	CXXFLAGS=-O
	export CXXFLAGS
	make clean distclean
	./configure [options...]
	make

or if you use a cshell:
	setenv CXXFLAGS -O
	make clean distclean
	./configure [options...]
	make

the problem may come from compiler or system header files.



3. As root install it with:

        make install-strip

This will install the dar suite binaries, libdar library and include files
as well as their manual page, sample programs, if built, are never installed.
'make install' also works but makes bigger binaries as they keep their symbol
table, which is not useful for normal operations.

Moreover if you had the upx command available in the PATH when "configure" was
run, at this step of installation, the binary files will be compressed using
upx.



4. Annex for Package Maintainers and those using Linux From Scratch:

The DESTDIR variable is available, here is an example of use:

   ./configure --prefix=/usr --enable-mode=64
   make
   make DESTDIR=/tmp/A install-strip

this will *build* the package to be used under /usr (in particular library will
have to be located in /usr/lib to work properly) but using DESTDIR the package
will not be *installed* in /usr, but in /tmp/A/usr. So you can
simply make a package of all the files under /tmp/A and install it on your
system. Here is an example for Slackware:

  cd /tmp/A
  makepkg dar64-2.2.0.tgz

At this step dar has not been installed on the system just a package has been
made. To install you just have to do:

  installpkg dar64-2.2.0.tgz

which will put all under /usr as expected. Things should work the same for other
distro.




        III _ INSTALLATION FOR WINDOWS FROM BINARY PACKAGE
        ==================================================


the binary package is a *.zip file (thus you need winzip to unpack it).
It contains a subdirectory (named dar) you will have to extract where you
want in your directory tree.
Optionally you can add the path to dar in the PATH variable in autoexec.bat.
Considering dar has been extracted under C:\dar you can add the following line
in autoexec.bat:

        set PATH=%PATH%;C:\Dar

then you have to reboot.
(Just kidding ! This was to respect the Windows usage and way of life ;-) )

Else if you don't setup the PATH variable, you need to specify the full
path to dar executables to use them from the Windows command-line prompt.


        IMPORTANT NOTE !

Note that path given to dar suite's program must respect the UNIX way (use
slashes "/" not back slashes "\") thus you have to have to use c:/temp in
place of c:\temp for example.

example:

        c:\dar_win-1.2.1\dar -c f:/tmp/toto -s 2G -z1 -R "c:/My Documents"

          ^             ^         ^   ^                     ^
          |             |         |   |                     |
          ---------------         ---------------------------
        here use anti-slash         but here we use slash
        as usually under           in arguments given to dar
        windows to point
        the command


Another point reported by "HansS713" on Sourceforge is about network paths.
the windows notation \\host\file\path cannot be translated replacing \ by
/ because it would lead to dar see a empty name as directory which is not
a valid path. The workaround found by "HansS713" is to translate the path
as follows:

       \\host\file\path     becomes     \\\\host/file/path

